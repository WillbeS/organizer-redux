{"version":3,"sources":["components/users/Auth.js","components/common/routes/PrivateRoute.js","components/AboutPage.js","components/common/forms/Input.js","components/common/forms/Submit.js","components/users/LoginForm.js","api/remoteKinvey.js","services/UserService.js","constants/actionTypes.js","actions/authActions.js","components/users/LoginPage.js","components/users/LogoutPage.js","components/users/RegisterForm.js","components/users/RegisterPage.js","services/ListService.js","actions/listActions.js","constants/app.js","components/lists/ListThumb.js","components/lists/ShowAllLists.js","components/lists/ListForm.js","components/lists/CreateListPage.js","components/lists/EditListPage.js","components/lists/ManageListsPage.js","components/todos/StatusBox.js","components/todos/TodosList.js","services/TodoService.js","actions/todoActions.js","components/common/forms/Select.js","components/todos/TodoForm.js","components/todos/CreateTodo.js","components/common/forms/FormHelper.js","components/common/AppHelper.js","components/todos/ManageTodosPage.js","components/common/routes/Routes.js","components/common/navbar/MenuItem.js","components/common/navbar/Menu.js","components/common/navbar/Navbar.js","components/common/Header.jsx","components/common/Footer.jsx","App.js","serviceWorker.js","reducers/reducers.js","reducers/authReducer.js","reducers/listReducer.js","reducers/todoReducer.js","index.js"],"names":["Auth","window","localStorage","removeItem","token","setItem","getItem","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router_dom_es","assign","render","props","isUserAuthenticated","to","pathname","state","from","location","AboutPage","className","Input","type","htmlFor","name","placeholder","value","onChange","Submit","onClick","LoginForm","error","forms_Input","username","password","forms_Submit","onSubmit","remoteKinvey","BASE_URL","APP_KEY","APP_SECRET","makeRequest","method","module","endpoint","auth","url","headers","Authorization","concat","btoa","getToken","makeAuth","Content-Type","get","$","ajax","post","data","obj","JSON","stringify","update","remove","handleError","reason","responseJSON","description","UserService","actionTypes","LOGGIN_SUCCESS","LOGOUT_SUCCESS","AUTH_ERROR","AUTH_REQUEST","LIST_CREATED","LIST_UPDATED","LIST_DELETED","FETCH_LISTS_SUCCESS","FIND_ONE_BY_ID","TODO_CREATED","TODO_UPDATED","TODO_DELETED","TODOS_FETCHED","REMOTE_ERROR","loginSuccess","authError","msg","message","logout","dispatch","then","deauthenticateUser","catch","err","LoginPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChangeHandler","bind","assertThisInitialized","onSubmitHandler","e","setState","defineProperty","target","preventDefault","isValidForm","login","toLowerCase","newProps","toastr","loggedIn","success","history","push","formIsValid","console","log","users_LoginForm","connect","authenticateUser","_kmd","authtoken","LogoutPage","RegisterForm","confirmPassword","RegisterPage","repeat","register","users_RegisterForm","ListService","id","remoteError","createList","create","createSuccess","editList","edit","editSuccess","deleteList","delete","deleteSuccess","fetchAll","getAll","fetchSuccess","crud","MODE_CREATE","MODE_READ","MODE_UPDATE","MODE_DELETE","NavLinks","MAIN_PUBLIC","label","MAIN_PRIVATE","ListThumb","list","event","editHandler","deleteHandler","_id","ShowAllLists","listItems","keys","map","key","components_lists_ListThumb","ListForm","CreateListPage","lists_ListForm","EditListPage","_this2","ManageListsPage","mode","onShowCreateHandler","onChangeInputHandler","onShowUpdateHandler","onDeleteHandler","remote","lists_ShowAllLists","lists_CreateListPage","lists_EditListPage","changes","StatusBox","checked","toggleState","undefined","selectedId","squareClass","TodosList","rows","todo","todos_StatusBox","done","onUpdateStatus","progress","onEditClick","onDeleteClick","TodoService","createTodo","editTodo","deleteTodo","Select","options","op","index","TodoForm","forms_Select","allProps","Repeat","react_datepicker_es","selected","moment","deadline","date","toISOString","submitValue","CreateTodo","todos_TodoForm","FormHelper","stateField","field","isNaN","Number","AppHelper","oldDeadline","d","Date","setDate","getDate","today","setHours","hasOwnProperty","parseInt","Array","splice","store","forEach","element","ManageTodosPage","getDefaultState","onCreateHandler","onUpdateHandler","deadlineIsInPast","noncompleted_count","handleInputChange","getTodoSelected","selectedTodo","changeDeadline","completed_count","list_id","_this$props$data$id","todos_TodosList","onUpdate","todos_CreateTodo","Routes","routes_PrivateRoute","path","exact","MenuItem","activeClassName","Menu","menuItems","item","navbar_MenuItem","Navbar","data-toggle","data-target","navbar_Menu","Header","navbar_Navbar","Footer","App","isAuthenticated","common_Header","routes_Routes","common_Footer","withRouter","Boolean","hostname","match","reducers","arguments","length","action","newState","deleteFromData","storeDataByKey","createStore","combineReducers","applyMiddleware","thunk","subscribe","getState","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e9a5067.chunk.js","sourcesContent":["class Auth {\r\n    static removeUser() {\r\n        window.localStorage.removeItem('user');\r\n    }\r\n\r\n    static authenticateUser(token) {\r\n        window.localStorage.setItem('token', token);\r\n    }\r\n\r\n    static isUserAuthenticated() {\r\n        return window.localStorage.getItem('token') !== null;\r\n    }\r\n\r\n    static deauthenticateUser() {\r\n        window.localStorage.removeItem('token');\r\n    }\r\n\r\n    static getToken() {\r\n        return window.localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport Auth from '../../users/Auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        Auth.isUserAuthenticated() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n                <Redirect to={{\r\n                    pathname: '/users/login',\r\n                    state: { from: props.location }\r\n                }} />\r\n            )\r\n    )\r\n    } />\r\n)\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\nconst AboutPage = (props) => (\r\n    <div className='row'>\r\n        <div className='col-md-12'>\r\n            <h1>About Page</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    let type = props.type || 'text';\r\n\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <input\r\n                type={type}\r\n                className='form-control'\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Submit = (props) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className='btn btn-primary'\r\n                type='submit'\r\n                value={props.value}\r\n                onClick={props.onClick} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Submit;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst LoginForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Login'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default LoginForm;","import $ from 'jquery';\r\nimport Auth from '../components/users/Auth';\r\n\r\nconst remoteKinvey = (() => {\r\n    const BASE_URL = 'https://baas.kinvey.com/';\r\n    const APP_KEY = 'kid_H1L5OCFUW'; // APP KEY HERE\r\n    const APP_SECRET = '338746648e3b4bfa8e83a8ac221a1acc'; // APP SECRET HERE\r\n\r\n    function makeAuth(auth) {\r\n        if (auth === 'basic') {\r\n            return `Basic ${btoa(APP_KEY + \":\" + APP_SECRET)}`;\r\n        } else {\r\n            let token = Auth.getToken();\r\n            return `Kinvey ${token}`\r\n        }\r\n    }\r\n\r\n    // request method (GET, POST, PUT)\r\n    // kinvey module (user/appdata)\r\n    // url endpoint\r\n    // auth\r\n    function makeRequest(method, module, endpoint, auth) {\r\n        return {\r\n            url: BASE_URL + module + '/' + APP_KEY + '/' + endpoint,\r\n            method: method,\r\n            headers: {\r\n                'Authorization': makeAuth(auth),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    }\r\n\r\n    function get(module, endpoint, auth) {\r\n        //console.log(makeRequest('GET', module, endpoint, auth));\r\n        return $.ajax(makeRequest('GET', module, endpoint, auth));\r\n    }\r\n\r\n    function post(module, endpoint, auth, data) {\r\n        let obj = makeRequest('POST', module, endpoint, auth);\r\n        if (data) {\r\n            obj.data = JSON.stringify(data);\r\n        }\r\n\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function update(module, endpoint, auth, data) {\r\n        let obj = makeRequest('PUT', module, endpoint, auth);\r\n        obj.data = JSON.stringify(data);\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function remove(module, endpoint, auth) {\r\n        return $.ajax(makeRequest('DELETE', module, endpoint, auth));\r\n    }\r\n\r\n    function handleError(reason) {\r\n        return reason.responseJSON.description;\r\n    }\r\n\r\n    return {\r\n        get,\r\n        post,\r\n        update,\r\n        remove,\r\n        handleError\r\n    };\r\n})();\r\n\r\nexport default remoteKinvey;","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nclass UserService {\r\n    static register(username, password) {\r\n        return remoteKinvey.post('user', '', 'basic', { username, password });\r\n    }\r\n\r\n    static login(username, password) {\r\n        return remoteKinvey.post('user', 'login', 'basic', { username, password });\r\n    }\r\n\r\n    static logout() {\r\n        return remoteKinvey.post('user', '_logout', 'kinvey');\r\n    }\r\n}\r\n\r\nexport default UserService;","const actionTypes = {\r\n    //Auth\r\n    LOGGIN_SUCCESS: 'LOGGIN_SUCCESS',\r\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n    AUTH_ERROR: 'AUTH_ERROR',\r\n    AUTH_REQUEST: 'AUTH_REQUEST',\r\n    //List\r\n    LIST_CREATED: 'LIST_CREATED',\r\n    LIST_UPDATED: 'LIST_UPDATED',\r\n    LIST_DELETED: 'LIST_DELETED',\r\n    FETCH_LISTS_SUCCESS: 'FETCH_LISTS_SUCCESS',\r\n    FIND_ONE_BY_ID: 'FIND_ONE_BY_ID',\r\n\r\n    //Todo\r\n    TODO_CREATED: 'TODO_CREATED',\r\n    TODO_UPDATED: 'TODO_UPDATED',\r\n    TODO_DELETED: 'TODO_DELETED',\r\n    TODOS_FETCHED: 'TODOS_FETCHED',\r\n\r\n\r\n    REMOTE_ERROR: 'REMOTE_ERROR',\r\n}\r\n\r\nexport default actionTypes;","import UserService from '../services/UserService';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\nimport Auth from '../components/users/Auth';\r\nimport actionTypes from '../constants/actionTypes';\r\n\r\nfunction loginSuccess() {\r\n    return {\r\n        type: actionTypes.LOGGIN_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction logoutSuccess() {\r\n    return {\r\n        type: actionTypes.LOGOUT_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction authError(msg) {\r\n    return {\r\n        type: actionTypes.AUTH_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction requestAuthentication() {\r\n    return {\r\n        type: actionTypes.AUTH_REQUEST\r\n    }\r\n}\r\n\r\nfunction login(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.login(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction register(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.register(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction logout() {\r\n    return (dispatch) => {\r\n        return UserService.logout()\r\n            .then(data => {\r\n                Auth.deauthenticateUser();\r\n                dispatch(logoutSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\nexport { login, register, logout, requestAuthentication }","import React, {Component} from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/authActions';\r\nimport toastr from 'toastr';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.login(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User login successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        console.log('Login Page render');\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-4 offset-md-4'>\r\n            <h1>Login</h1>\r\n                <p>Please enter your username and password.</p>\r\n                <LoginForm\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    error={this.state.error}\r\n                    onChange={this.onInputChangeHandler}\r\n                    onSubmit={this.onSubmitHandler} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login: (username, password) => dispatch(login(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\nimport {logout} from '../../actions/authActions';\r\n\r\nclass LogoutPage extends Component {\r\n    componentWillMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (!newProps.loggedIn) {\r\n            this.props.history.push('/users/login');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n      };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutPage);","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst RegisterForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='repeat'\r\n            placeholder='Confirm  Password'\r\n            value={props.confirmPassword}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Register'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport toastr from 'toastr';\r\nimport {register} from '../../actions/authActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            repeat: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.register(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User registration successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        const repeat = this.state.repeat;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (password !== repeat) {\r\n            error = 'Passwords missmatch!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-4 offset-md-4'>\r\n                    <h1>Register</h1>\r\n                    <p>Please fill in this form to create an account.</p>\r\n                    <RegisterForm\r\n                        username={this.state.username}\r\n                        password={this.state.password}\r\n                        repeat={this.state.repeat}\r\n                        error={this.state.error}\r\n                        onChange={this.onInputChangeHandler}\r\n                        onSubmit={this.onSubmitHandler} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        register: (username, password) => dispatch(register(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nconst COLLECTION_NAME = 'lists';\r\n\r\nclass ListService {\r\n    static create(data) {\r\n        return remoteKinvey.post('appdata', COLLECTION_NAME, 'kinvey', data);\r\n    }\r\n\r\n    static edit(id, data) {\r\n        return remoteKinvey.update('appdata', COLLECTION_NAME + `/${id}`, 'kinvey', data);\r\n    }\r\n\r\n    static delete(id) {\r\n        return remoteKinvey.remove('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n\r\n    static getAll() {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n\r\n    static getById(id) {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n}\r\n\r\nexport default ListService;","import ListService from '../services/ListService';\r\nimport actionTypes from '../constants/actionTypes';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\n\r\nfunction createSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_CREATED,\r\n        data\r\n    };\r\n}\r\n\r\nfunction editSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_UPDATED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction deleteSuccess(id) {\r\n    return {\r\n        type: actionTypes.LIST_DELETED,\r\n        id\r\n    }\r\n}\r\n\r\nfunction fetchSuccess(data) {\r\n    return {\r\n        type: actionTypes.FETCH_LISTS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nfunction remoteError(msg) {\r\n    return {\r\n        type: actionTypes.REMOTE_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction createList(data) {\r\n    return (dispatch) => {\r\n        return ListService.create(data)\r\n            .then(data => {\r\n                dispatch(createSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction editList(id, data) {\r\n    return (dispatch) => {\r\n        return ListService.edit(id, data)\r\n            .then(data => {\r\n                dispatch(editSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction deleteList(id) {\r\n    return (dispatch) => {\r\n        return ListService.delete(id)\r\n            .then(() => {\r\n                dispatch(deleteSuccess(id));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAll() {\r\n    console.log('Fetching lists!!!')\r\n    return (dispatch) => {\r\n        return ListService.getAll()\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nexport { createList, fetchAll, editList, deleteList };","const crud = {\r\n    MODE_CREATE: 'MODE_CREATE',\r\n    MODE_READ: 'MODE_READ',\r\n    MODE_UPDATE: 'MODE_UPDATE',\r\n    MODE_DELETE: 'MODE_DELETE',\r\n}\r\n\r\nconst NavLinks = {\r\n    MAIN_PUBLIC: [\r\n        { label: 'Login', to: '/users/login' },\r\n        { label: 'Register', to: '/users/register' },\r\n    ],\r\n    MAIN_PRIVATE: [\r\n        { label: 'Home', to: '/' },\r\n        { label: 'Add Todo', to: '/todos/add' },\r\n        { label: 'Manage Lists', to: '/lists' },\r\n        { label: 'Logout', to: '/users/logout' },\r\n    ]\r\n}\r\n\r\nexport { crud, NavLinks };","import React from 'react';\r\nimport './ListThumb.css';\r\n//import { Link } from 'react-router-dom';\r\n\r\nconst ListThumb = (props) => (\r\n    <div className='list-thumb'>\r\n        <h2>{props.list.name}</h2>\r\n        <p>\r\n            <span>Total:</span> 6<br />\r\n            <span>Today:</span> 3<br />\r\n            <span>Active:</span> 2<br />\r\n            <span>Completed:</span> 1<br />\r\n        </p>\r\n        <button onClick={(event) => (props.editHandler(event, props.list))}>[Edit]</button> \r\n        <button onClick={(event) => (props.deleteHandler(event, props.list._id))}>[Delete]</button>\r\n    </div>\r\n);\r\n\r\nexport default ListThumb;","import React from 'react';\r\nimport ListThumb from './ListThumb';\r\n\r\nconst ShowAllLists = (props) => {\r\n    const data = props.data;\r\n    let listItems = Object.keys(data).map(key => (\r\n        <ListThumb \r\n            key={key} \r\n            list={data[key]} \r\n            editHandler={props.editHandler}\r\n            deleteHandler={props.deleteHandler} />\r\n    ));\r\n\r\n    //console.log('Render ShowAllLists');\r\n    return (\r\n        <div>\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowAllLists;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst ListForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>{props.error}</div>\r\n            <Input\r\n                name='name'\r\n                placeholder='Name'\r\n                value={props.name}\r\n                onChange={props.onChange} />\r\n            <br />\r\n            <Submit\r\n                value='Submit'\r\n                onClick={props.onSubmit} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ListForm;","import React, { Component} from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass CreateListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        //const data = { name: this.props.name };\r\n        this.props.createList(this.props.list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Create List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={this.onSubmitHandler}\r\n                    error={this.state.error} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateListPage","import React, { Component } from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass EditListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e, id, list) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        console.log(list);\r\n        this.props.editList(id, list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Edit List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={(e) => (this.onSubmitHandler(e, this.props.id, this.props.list))}\r\n                    error={this.state.error} /> \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditListPage;","import React, { Component } from 'react';\r\nimport { fetchAll } from '../../actions/listActions';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport {crud} from '../../constants/app';\r\nimport ShowAllLists from './ShowAllLists';\r\nimport CreateListPage from './CreateListPage';\r\nimport { createList, editList, deleteList } from '../../actions/listActions';\r\nimport toastr from 'toastr';\r\nimport EditListPage from './EditListPage';\r\n\r\nclass ManageListsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mode: crud.MODE_READ,\r\n            list: {\r\n                name: ''\r\n            },\r\n            error: ''\r\n        }\r\n\r\n        this.onShowCreateHandler = this.onShowCreateHandler.bind(this);\r\n        this.onChangeInputHandler = this.onChangeInputHandler.bind(this);\r\n        this.onShowUpdateHandler = this.onShowUpdateHandler.bind(this);\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.remote === actionTypes.FETCH_LISTS_SUCCESS) {\r\n            return;\r\n        }\r\n\r\n        this.props.fetchAll();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_CREATED) {\r\n            toastr.success('New list added successfully!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_UPDATED) {\r\n            toastr.success('The list was successfully updated!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_DELETED) {\r\n            toastr.success('The list was successfully deleted!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n    }\r\n\r\n    onChangeInputHandler(e) {\r\n        this.setState({ list: { [e.target.name]: e.target.value } });\r\n    }\r\n\r\n    onShowCreateHandler(event) {\r\n        this.setState({ mode: crud.MODE_CREATE });\r\n    }\r\n\r\n    onShowUpdateHandler(e, list) {\r\n        this.setState({ mode: crud.MODE_UPDATE, list: {name: list.name}, id: list._id });\r\n    }\r\n\r\n    onDeleteHandler(e, id) {\r\n        this.setState({ mode: crud.MODE_DELETE });\r\n        this.props.deleteList(id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Manage Lists</h1>\r\n\r\n                {this.state.mode === crud.MODE_READ &&\r\n                    <div>\r\n                        <button\r\n                            onClick={this.onShowCreateHandler}>\r\n                            Add List\r\n                        </button>\r\n                        <hr />\r\n                        <ShowAllLists \r\n                            data={this.props.data} \r\n                            editHandler={this.onShowUpdateHandler}\r\n                            deleteHandler={this.onDeleteHandler} />\r\n                    </div>\r\n                }\r\n\r\n                {this.state.mode !== crud.MODE_READ &&\r\n                    <button\r\n                        onClick={() => (this.setState({mode: crud.MODE_READ}))}>\r\n                        Back to All Lists\r\n                    </button>\r\n                }\r\n\r\n                {this.state.mode === crud.MODE_CREATE &&\r\n                    <CreateListPage\r\n                        createList={this.props.createList}\r\n                        list={this.state.list}\r\n                        onChange={this.onChangeInputHandler} />\r\n                }\r\n                {this.state.mode === crud.MODE_UPDATE &&\r\n                    <EditListPage\r\n                        editList={this.props.editList}\r\n                        list={this.state.list}\r\n                        id={this.state.id}\r\n                        onChange={this.onChangeInputHandler}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.list.data,\r\n        remote: state.list.remote,\r\n        error: state.list.error,\r\n        changes: state.list.changes\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchAll: () => dispatch(fetchAll()),\r\n        createList: (data) => dispatch(createList(data)),\r\n        editList: (id, data) => dispatch(editList(id, data)),\r\n        deleteList: (id) => dispatch(deleteList(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageListsPage);","import React, {Component} from 'react';\r\n\r\nclass StatusBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checked: this.props.checked\r\n        }\r\n\r\n        this.toggleState = this.toggleState.bind(this);\r\n    }\r\n\r\n\r\n    toggleState(e) {\r\n        const checked = !this.state.checked;\r\n        this.setState({checked});\r\n        console.log('Status updated');\r\n\r\n        if(this.props.onClick !== undefined) {\r\n            this.props.onClick(this.props.selectedId);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let squareClass = this.state.checked ? 'far fa-check-square' : 'far fa-square';\r\n\r\n        return(\r\n            <span \r\n                onClick={this.toggleState}>\r\n                <i className={squareClass}></i>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBox;","import React from 'react';\r\nimport StatusBox from './StatusBox';\r\n\r\nconst TodosList = (props) => {\r\n    const data = props.data;\r\n    let rows = Object.keys(data).map(key => {\r\n        const todo = data[key];\r\n        return <tr key={key}>\r\n            <td>\r\n                <StatusBox\r\n                    checked={todo.done}\r\n                    selectedId={key}\r\n                    onClick={props.onUpdateStatus} />\r\n            </td>\r\n            <td>{todo.name}</td>\r\n            <td>{todo.progress} / {todo.target}</td>\r\n            <td>\r\n                <button onClick={(e) => (props.onEditClick(e, key))}>[Edit]</button> \r\n                <button onClick={(e) => (props.onDeleteClick(e, key))}>[Delete]</button>\r\n            </td>\r\n        </tr>\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h2>List All Tasks</h2>\r\n            <div className='table-responsive'>\r\n                <table className=\"table table-hover\">\r\n\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodosList;","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nconst COLLECTION_NAME = 'todos';\r\n\r\nclass TodoService {\r\n    static create(data) {\r\n        return remoteKinvey.post('appdata', COLLECTION_NAME, 'kinvey', data);\r\n    }\r\n\r\n    static edit(id, data) {\r\n        return remoteKinvey.update('appdata', COLLECTION_NAME + `/${id}`, 'kinvey', data);\r\n    }\r\n\r\n    static delete(id) {\r\n        return remoteKinvey.remove('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n\r\n    static getAll() {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n\r\n    static getById(id) {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n}\r\n\r\nexport default TodoService;","import TodoService from '../services/TodoService';\r\nimport actionTypes from '../constants/actionTypes';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\n\r\nfunction createSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODO_CREATED,\r\n        data\r\n    };\r\n}\r\n\r\nfunction editSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODO_UPDATED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction deleteSuccess(id) {\r\n    return {\r\n        type: actionTypes.TODO_DELETED,\r\n        id\r\n    }\r\n}\r\n\r\nfunction fetchSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODOS_FETCHED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction remoteError(msg) {\r\n    return {\r\n        type: actionTypes.REMOTE_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction createTodo(data) {\r\n    return (dispatch) => {\r\n        return TodoService.create(data)\r\n            .then(data => {\r\n                dispatch(createSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction editTodo(id, data) {\r\n    return (dispatch) => {\r\n        return TodoService.edit(id, data)\r\n            .then(data => {\r\n                dispatch(editSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction deleteTodo(id) {\r\n    return (dispatch) => {\r\n        return TodoService.delete(id)\r\n            .then(() => {\r\n                dispatch(deleteSuccess(id));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAll() {\r\n    console.log('Fetching todos');\r\n    return (dispatch) => {\r\n        return TodoService.getAll()\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nexport { fetchAll, createTodo, editTodo, deleteTodo };","import React from 'react';\r\n\r\nconst Select = (props) => {\r\n    let options = <option value=''>No values</option>\r\n    if (props.options) {\r\n        options = props.options.map((op, index) => {\r\n            return <option key={index} value={op}>{op}</option>\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <select\r\n                className='form-control'\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}>{options}</select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\nimport Select from '../common/forms/Select';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\n\r\nconst TodoForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='name'\r\n            placeholder='Name'\r\n            value={props.todo.name}\r\n            onChange={props.onChange} />\r\n        <Select\r\n            name='type'\r\n            placeholder='Type'\r\n            value={props.todo.type}\r\n            options={([\r\n                'Single',\r\n                'Times',\r\n                'Minutes',\r\n                'Hours'])}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='number'\r\n            name='target'\r\n            placeholder='Target'\r\n            value={props.todo.target}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        {props.allProps &&\r\n            <div>\r\n                <Input\r\n                    type='number'\r\n                    name='Repeat'\r\n                    placeholder='Repeat'\r\n                    value={props.todo.Repeat}\r\n                    onChange={props.onChange} />\r\n                <br />\r\n                Start Date:\r\n                <DatePicker\r\n                    selected={moment(props.todo.deadline)} \r\n                    onChange={(date => props.onChange({target: {name: 'deadline', value: date.toISOString() }}))} />\r\n            </div>\r\n\r\n        }\r\n        <Submit\r\n            value={props.submitValue}\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport TodoForm from './TodoForm';\r\n\r\nconst CreateTodo = (props) => {\r\n    return(\r\n        <div>\r\n            <h2>Create Todo</h2>\r\n            <TodoForm\r\n                todo={props.todo}\r\n                onChange={props.onChange}\r\n                submitValue='Add'\r\n                onSubmit={props.onSubmit}\r\n                error={props.error} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTodo;","class FormHelper {\r\n    static handleInputChange(event, stateField) {\r\n        const target = event.target;\r\n        const field = target.name;\r\n        let value = target.value;\r\n\r\n        if(value !== '' && !isNaN(value)) {\r\n            value = Number(value);\r\n        }\r\n\r\n        const state = this.state[stateField];\r\n        state[field] = value;\r\n        this.setState({ stateField: state });\r\n    }\r\n}\r\n\r\nexport default FormHelper;","/////////////////////////////// App Helper Functions /////////////////////////////////////\r\n// Temporary here but when grow too many will separate them by functionality/components //\r\n//////////////////////////////////////////////////////////////////////////////////////////\r\nclass AppHelper {\r\n    //(to go in TodoHelper)\r\n    static changeDeadline(oldDeadline, repeat) {\r\n        let d = new Date(oldDeadline);\r\n        let newDeadline = new Date(d.setDate(d.getDate() + repeat));\r\n\r\n        return newDeadline.toISOString();\r\n    }\r\n\r\n    //If deadline is before today, set it to today\r\n    static deadlineIsInPast(oldDeadline) {\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        let d = new Date(oldDeadline);\r\n        d.setHours(0, 0, 0, 0);\r\n\r\n        return d < today;\r\n    }\r\n\r\n    // Delete element from object|array regardless (to go in StoreHelper)\r\n    static deleteFromData(data, key) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            return;\r\n        }\r\n\r\n        if (isNaN(parseInt(key)) || !(data instanceof Array)) {\r\n            delete data[key];\r\n        } else {\r\n            data.splice(key, 1);\r\n        }\r\n    }\r\n\r\n    // Store data in associative array by given key (to go in StoreHelper)\r\n    static storeDataByKey(data, key) {\r\n        let store = {};\r\n        data.forEach(element => {\r\n            store[element[key]] = element;\r\n        });\r\n\r\n        return store;\r\n    }\r\n}\r\n\r\nexport default AppHelper;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoList from './TodosList';\r\nimport { fetchAll, createTodo, editTodo, deleteTodo } from '../../actions/todoActions';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport { crud } from '../../constants/app';\r\nimport CreateTodo from './CreateTodo';\r\nimport FormHelper from '../common/forms/FormHelper';\r\nimport toastr from 'toastr';\r\nimport TodoForm from './TodoForm';\r\nimport AppHelper from '../common/AppHelper';\r\nimport moment from 'moment';\r\n\r\nclass ManageTodosPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.getDefaultState();\r\n\r\n        this.onShowCreateHandler = this.onShowCreateHandler.bind(this);\r\n        this.onChangeInputHandler = this.onChangeInputHandler.bind(this);\r\n        this.onCreateHandler = this.onCreateHandler.bind(this);\r\n        this.onShowUpdateHandler = this.onShowUpdateHandler.bind(this);\r\n        this.onUpdateHandler = this.onUpdateHandler.bind(this);\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n        this.onUpdateStatus = this.onUpdateStatus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.remote === actionTypes.TODOS_FETCHED) {\r\n            return;\r\n        }\r\n\r\n        this.props.fetchAll();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODOS_FETCHED) {\r\n            //Do deadline check\r\n            for (const key in newProps.data) {\r\n                const todo = newProps.data[key];\r\n                if(AppHelper.deadlineIsInPast(todo.deadline)) {\r\n                    todo.deadline = moment().toISOString();\r\n                    todo.noncompleted_count++;\r\n                    this.props.editTodo(key, todo);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newProps.remote !== actionTypes.TODOS_FETCHED) {\r\n            this.setState(this.getDefaultState);\r\n        }\r\n    }\r\n\r\n    onChangeInputHandler(event) {\r\n        FormHelper.handleInputChange.bind(this)(event, 'todo');\r\n    }\r\n\r\n    onShowCreateHandler(event) {\r\n        this.setState({ mode: crud.MODE_CREATE });\r\n    }\r\n\r\n    onCreateHandler(event) {\r\n        event.preventDefault();\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.createTodo(this.state.todo);\r\n    }\r\n\r\n    onShowUpdateHandler(event, id) {\r\n        this.setState({ mode: crud.MODE_UPDATE, todo: this.getTodoSelected(id), selectedTodo: id });\r\n    }\r\n\r\n    onUpdateHandler(event) {\r\n        event.preventDefault();\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        let todo = this.state.todo;\r\n        this.props.editTodo(this.state.selectedTodo, todo);\r\n    }\r\n\r\n    onUpdateStatus(id) {\r\n        let todo = this.getTodoSelected(id);\r\n\r\n        if(todo.done) {\r\n            // change it ot false (uncomplete)\r\n            todo.deadline = AppHelper.changeDeadline(todo.deadline, -(todo.Repeat));\r\n            todo.completed_count--;\r\n        } else {\r\n            //change it to true (complete)\r\n            todo.deadline = AppHelper.changeDeadline(todo.deadline, todo.Repeat);\r\n            todo.completed_count++;\r\n        }\r\n        \r\n        todo.done = !todo.done;\r\n        this.props.editTodo(id, todo);\r\n    }\r\n\r\n    onDeleteHandler(event, id) {\r\n        this.props.deleteTodo(id);\r\n    }\r\n\r\n    //TODO - figure s general method to valifate forms (look for some library maybe?)\r\n    isValidForm() {\r\n        const name = this.state.todo.name;\r\n        const type = this.state.todo.type;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '' || type === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    getDefaultState() {\r\n        return {\r\n            selectedTodo: null,\r\n            todo: {\r\n                name: '',\r\n                type: 'Single',\r\n                list_id: null,\r\n                target: 1,\r\n                progress: 0,\r\n                done: false,\r\n                Repeat: 0,\r\n                completed_count: 0,\r\n                noncompleted_count: 0,\r\n                deadline: moment().toISOString()\r\n            },\r\n            error: '',\r\n            mode: crud.MODE_READ\r\n        }\r\n    }\r\n\r\n    getTodoSelected(id) {\r\n        const {name, type, target,\r\n             progress, done, Repeat, \r\n             completed_count, noncompleted_count, deadline} = this.props.data[id];\r\n        return {name, type, target, progress, done, Repeat, completed_count, noncompleted_count, deadline};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Manage Todos Page</h1>\r\n                {this.state.mode === crud.MODE_READ &&\r\n                    <div>\r\n                        <button\r\n                            onClick={this.onShowCreateHandler}>\r\n                            Add Todo\r\n                        </button>\r\n                        <hr />\r\n                        <TodoList \r\n                            data={this.props.data}\r\n                            onEditClick={this.onShowUpdateHandler}\r\n                            onUpdate={this.onUpdateHandler}\r\n                            onDeleteClick={this.onDeleteHandler}\r\n                            onUpdateStatus={this.onUpdateStatus} />\r\n                    </div>\r\n                }\r\n\r\n                {this.state.mode !== crud.MODE_READ &&\r\n                    <button\r\n                        onClick={() => (this.setState({ mode: crud.MODE_READ }))}>\r\n                        Back to All\r\n                    </button>\r\n                }\r\n\r\n                {this.state.mode === crud.MODE_CREATE &&\r\n                    <CreateTodo\r\n                        onSubmit={this.onCreateHandler}\r\n                        todo={this.state.todo}\r\n                        onChange={this.onChangeInputHandler}\r\n                        error={this.state.error} />\r\n                }\r\n\r\n                {this.state.mode === crud.MODE_UPDATE &&\r\n                    <div>\r\n                        <h2>Edit Todo</h2>\r\n                        <TodoForm\r\n                            allProps={true}\r\n                            todo={this.state.todo}\r\n                            onChange={this.onChangeInputHandler}\r\n                            submitValue='Edit'\r\n                            onSubmit={this.onUpdateHandler}\r\n                            error={this.state.error} />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.todo.data,\r\n        remote: state.todo.remote,\r\n        error: state.todo.error,\r\n        changes: state.todo.changes\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchAll: () => dispatch(fetchAll()),\r\n        createTodo: (data) => dispatch(createTodo(data)),\r\n        editTodo: (id, data) => dispatch(editTodo(id, data)),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTodosPage);","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n//import HomePage from '../../HomePage';\r\nimport AboutPage from '../../AboutPage';\r\nimport LoginPage from '../../users/LoginPage';\r\nimport LogoutPage from '../../users/LogoutPage';\r\nimport RegisterPage from '../../users/RegisterPage';\r\n// import AddTodoPage from '../../todos/AddTodoPage';\r\nimport ManageListsPage from '../../lists/ManageListsPage';\r\nimport CreateListPage from '../../lists/CreateListPage';\r\nimport EditListPage from '../../lists/EditListPage';\r\nimport ManageTodosPage from '../../todos/ManageTodosPage';\r\n\r\nconst Routes = (props) => (\r\n    <Switch>\r\n        <PrivateRoute path='/' exact component={ManageTodosPage} />\r\n        <Route path='/about' component={AboutPage} />\r\n        <Route path='/users/login' component={LoginPage} />\r\n        <Route path='/users/register' component={RegisterPage} />\r\n        <PrivateRoute path='/users/logout' component={LogoutPage} />\r\n        {/* <PrivateRoute path='/todos/add' component={AddTodoPage} /> */}\r\n        <PrivateRoute path='/lists' component={ManageListsPage} />\r\n        <PrivateRoute path='/list/add' component={CreateListPage} />\r\n        <PrivateRoute path='/list/edit/:id' component={EditListPage} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = (props) => (\r\n    <li className=\"nav-item\">\r\n        <NavLink exact className='nav-link' activeClassName='active' to={props.to}>{props.label}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\n\r\nconst Menu = (props) => {\r\n    let menuItems = props.menuItems.map((item, index) => {\r\n        return <MenuItem key={index} label={item.label} to={item.to} />\r\n    });\r\n\r\n    return <ul className=\"navbar-nav\">\r\n        {menuItems}\r\n    </ul>\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport Menu from './Menu';\r\nimport { NavLinks } from '../../../constants/app';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        let menuItems = this.props.loggedIn ? NavLinks.MAIN_PRIVATE : NavLinks.MAIN_PUBLIC;\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <Menu menuItems={menuItems} />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './navbar/Navbar';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <Navbar loggedIn={props.loggedIn} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright 2018 - Organizer App by Willbe.S</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Routes from './components/common/routes/Routes';\r\nimport Header from './components/common/Header';\r\nimport Footer from './components/common/Footer';\r\nimport { requestAuthentication } from './actions/authActions';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.isAuthenticated();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header \r\n          loggedIn={this.props.loggedIn} />\r\n        <div className=\"container margin-top-30\">\r\n          <Routes />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.auth.loggedIn,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    isAuthenticated: () => dispatch(requestAuthentication()),\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { authReducer } from './authReducer';\r\nimport { listReducer } from './listReducer';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nexport default {\r\n    auth: authReducer,\r\n    list: listReducer,\r\n    todo: todoReducer\r\n};","import actionTypes from '../constants/actionTypes';\r\nimport Auth from '../components/users/Auth';\r\n\r\nexport function authReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_REQUEST:\r\n            return Object.assign({}, state, { loggedIn: Auth.isUserAuthenticated(), error: false });\r\n        case actionTypes.LOGGIN_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: true, error: false });\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: false, error: false });\r\n        case actionTypes.AUTH_ERROR:\r\n            return Object.assign({}, state, { loggedIn: false, error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}","import actionTypes from '../constants/actionTypes';\r\nimport AppHelper from '../components/common/AppHelper';\r\n\r\nexport function listReducer(state = { data: {}, remote: null, error: null, changes: 0 }, action) {\r\n    let newState = null;\r\n    state.changes++;\r\n    switch (action.type) {\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return { data: {}, remote: null, error: null, changes: 0 };\r\n        case actionTypes.LIST_CREATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_CREATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n        case actionTypes.LIST_UPDATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_UPDATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n        case actionTypes.LIST_DELETED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_DELETED, error: null });\r\n            AppHelper.deleteFromData(newState.data, action.id);\r\n            return newState;\r\n        case actionTypes.FETCH_LISTS_SUCCESS:\r\n            return Object.assign({}, state, { data: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.FETCH_LISTS_SUCCESS, error: null });\r\n        case actionTypes.REMOTE_ERROR:\r\n            //TODO - decide the best place to handle remote errors\r\n            return Object.assign({}, state, { error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// function storeData(data) {\r\n//     let store = {};\r\n//     data.forEach(element => {\r\n//         store[element._id] = element;\r\n//     });\r\n\r\n//     return store;\r\n// }\r\n\r\n//Can be used on both objects and arrays\r\n// function deleteData(data, key) {\r\n//     if (!data.hasOwnProperty(key)) {\r\n//         return;\r\n//     }\r\n\r\n//     if (isNaN(parseInt(key)) || !(data instanceof Array)) {\r\n//         delete data[key];\r\n//     } else {\r\n//         data.splice(key, 1);\r\n//     }\r\n// }","import actionTypes from '../constants/actionTypes';\r\nimport AppHelper from '../components/common/AppHelper';\r\n\r\nexport function todoReducer(state = { data: {}, remote: null, error: null, changes: 0 }, action) {\r\n    let newState = null;\r\n    state.changes++;\r\n    switch (action.type) {\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return { data: {}, remote: null, error: null, changes: 0 };\r\n\r\n        case actionTypes.TODO_CREATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.TODO_CREATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.TODO_UPDATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.TODO_UPDATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.TODO_DELETED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.TODO_DELETED, error: null });\r\n            AppHelper.deleteFromData(newState.data, action.id);\r\n            return newState;\r\n\r\n        case actionTypes.TODOS_FETCHED:\r\n            return Object.assign({}, state, { data: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.TODOS_FETCHED, error: null });\r\n\r\n        case actionTypes.REMOTE_ERROR:\r\n            return Object.assign({}, state, { error: action.message });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Needs to be moved in helper file\r\n// function storeData(data) {\r\n//     let store = {};\r\n//     data.forEach(element => {\r\n//         store[element._id] = element;\r\n//     });\r\n\r\n//     return store;\r\n// }\r\n\r\n// Can be used on both objects and arrays\r\n// Needs to be moved in helper file\r\n// function deleteData(data, key) {\r\n//     if (!data.hasOwnProperty(key)) {\r\n//         return;\r\n//     }\r\n\r\n//     if (isNaN(parseInt(key)) || !(data instanceof Array)) {\r\n//         delete data[key];\r\n//     } else {\r\n//         data.splice(key, 1);\r\n//     }\r\n// }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport reducers from './reducers/reducers';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(combineReducers(reducers), applyMiddleware(thunk));\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}