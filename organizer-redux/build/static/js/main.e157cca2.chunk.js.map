{"version":3,"sources":["components/users/Auth.js","components/common/routes/PrivateRoute.js","components/AboutPage.js","components/common/forms/Input.js","components/common/forms/Submit.js","components/users/LoginForm.js","api/remoteKinvey.js","services/UserService.js","constants/actionTypes.js","actions/authActions.js","components/users/LoginPage.js","components/users/LogoutPage.js","components/users/RegisterForm.js","components/users/RegisterPage.js","services/ListService.js","actions/listActions.js","constants/app.js","components/lists/ListThumb.js","components/lists/ShowAllLists.js","components/lists/ListForm.js","components/lists/CreateListPage.js","components/lists/EditListPage.js","components/lists/ManageListsPage.js","services/TodoService.js","actions/todoActions.js","components/common/AppHelper.js","components/todos/StatusBox.js","components/todos/Progress.js","components/todos/DailyTodo.js","components/todos/DailyTodosList.js","components/todos/CompletedTodo.js","components/todos/CompletedTodosList.js","components/todos/DailyTodosPage.js","components/common/forms/Select.js","components/todos/TodoForm.js","components/common/forms/FormHelper.js","components/todos/TodoHelper.js","components/todos/CreateTodoPage.js","components/todos/EditTodoPage.js","components/todos/StatsTodo.js","components/todos/StatsTodosList.js","components/lists/ViewListDetailsPage.js","components/common/routes/Routes.js","components/common/navbar/MenuItem.js","components/common/navbar/Menu.js","components/common/navbar/Navbar.js","components/common/Header.jsx","components/common/Footer.jsx","App.js","serviceWorker.js","reducers/reducers.js","reducers/authReducer.js","reducers/listReducer.js","reducers/todoReducer.js","index.js"],"names":["Auth","window","localStorage","removeItem","token","setItem","getItem","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router_dom_es","assign","render","props","isUserAuthenticated","to","pathname","state","from","location","AboutPage","className","Input","type","htmlFor","name","placeholder","value","onChange","Submit","onClick","LoginForm","error","forms_Input","username","password","forms_Submit","onSubmit","remoteKinvey","BASE_URL","APP_KEY","APP_SECRET","makeRequest","method","module","endpoint","auth","url","headers","Authorization","concat","btoa","getToken","makeAuth","Content-Type","get","$","ajax","post","data","obj","JSON","stringify","update","remove","handleError","reason","responseJSON","description","UserService","actionTypes","LOGGIN_SUCCESS","LOGOUT_SUCCESS","AUTH_ERROR","AUTH_REQUEST","LIST_CREATED","LIST_UPDATED","LIST_DELETED","FETCH_LISTS_SUCCESS","FIND_ONE_BY_ID","LIST_BY_ID_FETCHED","TODO_CREATED","TODO_UPDATED","TODO_DELETED","TODOS_FETCHED","TODOS_BY_LIST_FETCHED","COMPLETED_TODOS_FETCHED","TODO_BY_ID_FETCHED","REMOTE_ERROR","loginSuccess","authError","msg","message","logout","dispatch","then","deauthenticateUser","catch","err","LoginPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChangeHandler","bind","assertThisInitialized","onSubmitHandler","e","setState","defineProperty","target","preventDefault","isValidForm","login","toLowerCase","newProps","toastr","loggedIn","success","history","push","formIsValid","console","log","users_LoginForm","connect","authenticateUser","_kmd","authtoken","LogoutPage","RegisterForm","confirmPassword","RegisterPage","repeat","register","users_RegisterForm","ListService","id","remoteError","createList","create","createSuccess","editList","edit","editSuccess","deleteList","delete","deleteSuccess","fetchAll","getAll","fetchSuccess","fetchOne","getById","list","crud","MODE_CREATE","MODE_READ","MODE_UPDATE","MODE_DELETE","NavLinks","MAIN_PUBLIC","label","MAIN_PRIVATE","ListThumb","_id","event","editHandler","ShowAllLists","listItems","keys","map","key","components_lists_ListThumb","deleteHandler","ListForm","CreateListPage","lists_ListForm","EditListPage","_this2","ManageListsPage","mode","onShowCreateHandler","onChangeInputHandler","onShowUpdateHandler","onDeleteHandler","remote","lists_ShowAllLists","lists_CreateListPage","lists_EditListPage","changes","TodoService","date","query","listId","createTodo","editTodo","deleteTodo","fetchAllByList","getAllByList","fetchedNyListSuccess","fetchCompleted","getCompleted","completedFetched","todo","AppHelper","oldDeadline","d","Date","setDate","getDate","toISOString","today","setHours","hasOwnProperty","isNaN","parseInt","Array","splice","store","forEach","element","StatusBox","checked","toggleState","undefined","squareClass","Progress","handleChange","onAdd","onSave","Number","num","newValue","progress","TodoDaily","hiddenRowId","editBtn","completed","complete_date","todos_StatusBox","onUpdateStatus","components_todos_Progress","onUpdateProgress","colSpan","data-toggle","data-target","DailyTodosList","rows","DailyTodo","onEditClick","CompletedTodosList","CompletedTodo","DailyTodosPage","showCompleted","onShowCompleted","onHideCompleted","loadDailyTodos","deadlineIsInPast","deadline","getDateNoHoursISO","noncompleted_count","fetchDaily","completed_count","changeDeadline","Repeat","newProgress","completedBtnLabel","completedHandler","todos_DailyTodosList","onUpdate","onUpdateHandler","onDeleteClick","todos_CompletedTodosList","getDaily","Select","options","op","index","TodoForm","forms_Select","allProps","react_datepicker_es","selected","moment","submitValue","FormHelper","stateField","field","TodoHelper","selectedTodo","list_id","done","CreateTodoPage","match","params","handleInputChange","handleSubmit","todos_TodoForm","React","EditTodoPage","StatsTodo","stats","StatsTodosList","todos_StatsTodo","ViewListDetailsPage","fetchTodosByList","listRemote","todos_StatsTodosList","dataByList","Routes","routes_PrivateRoute","path","exact","MenuItem","activeClassName","Menu","menuItems","item","navbar_MenuItem","Navbar","navbar_Menu","Header","navbar_Navbar","Footer","App","isAuthenticated","common_Header","routes_Routes","common_Footer","withRouter","Boolean","hostname","reducers","arguments","length","action","newState","deleteFromData","storeDataByKey","createStore","combineReducers","applyMiddleware","thunk","subscribe","getState","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e157cca2.chunk.js","sourcesContent":["class Auth {\r\n    static removeUser() {\r\n        window.localStorage.removeItem('user');\r\n    }\r\n\r\n    static authenticateUser(token) {\r\n        window.localStorage.setItem('token', token);\r\n    }\r\n\r\n    static isUserAuthenticated() {\r\n        return window.localStorage.getItem('token') !== null;\r\n    }\r\n\r\n    static deauthenticateUser() {\r\n        window.localStorage.removeItem('token');\r\n    }\r\n\r\n    static getToken() {\r\n        return window.localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport Auth from '../../users/Auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        Auth.isUserAuthenticated() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n                <Redirect to={{\r\n                    pathname: '/users/login',\r\n                    state: { from: props.location }\r\n                }} />\r\n            )\r\n    )\r\n    } />\r\n)\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\nconst AboutPage = (props) => (\r\n    <div className='row'>\r\n        <div className='col-md-12'>\r\n            <h1>About Page</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    let type = props.type || 'text';\r\n\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <input\r\n                type={type}\r\n                className='form-control'\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Submit = (props) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className='btn btn-primary'\r\n                type='submit'\r\n                value={props.value}\r\n                onClick={props.onClick} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Submit;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst LoginForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Login'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default LoginForm;","import $ from 'jquery';\r\nimport Auth from '../components/users/Auth';\r\n\r\nconst remoteKinvey = (() => {\r\n    const BASE_URL = 'https://baas.kinvey.com/';\r\n    const APP_KEY = 'kid_H1L5OCFUW'; // APP KEY HERE\r\n    const APP_SECRET = '338746648e3b4bfa8e83a8ac221a1acc'; // APP SECRET HERE\r\n\r\n    function makeAuth(auth) {\r\n        if (auth === 'basic') {\r\n            return `Basic ${btoa(APP_KEY + \":\" + APP_SECRET)}`;\r\n        } else {\r\n            let token = Auth.getToken();\r\n            return `Kinvey ${token}`\r\n        }\r\n    }\r\n\r\n    // request method (GET, POST, PUT)\r\n    // kinvey module (user/appdata)\r\n    // url endpoint\r\n    // auth\r\n    function makeRequest(method, module, endpoint, auth) {\r\n        return {\r\n            url: BASE_URL + module + '/' + APP_KEY + '/' + endpoint,\r\n            method: method,\r\n            headers: {\r\n                'Authorization': makeAuth(auth),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    }\r\n\r\n    function get(module, endpoint, auth) {\r\n        //console.log(makeRequest('GET', module, endpoint, auth));\r\n        return $.ajax(makeRequest('GET', module, endpoint, auth));\r\n    }\r\n\r\n    function post(module, endpoint, auth, data) {\r\n        let obj = makeRequest('POST', module, endpoint, auth);\r\n        if (data) {\r\n            obj.data = JSON.stringify(data);\r\n        }\r\n\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function update(module, endpoint, auth, data) {\r\n        let obj = makeRequest('PUT', module, endpoint, auth);\r\n        obj.data = JSON.stringify(data);\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function remove(module, endpoint, auth) {\r\n        return $.ajax(makeRequest('DELETE', module, endpoint, auth));\r\n    }\r\n\r\n    function handleError(reason) {\r\n        return reason.responseJSON.description;\r\n    }\r\n\r\n    return {\r\n        get,\r\n        post,\r\n        update,\r\n        remove,\r\n        handleError\r\n    };\r\n})();\r\n\r\nexport default remoteKinvey;","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nclass UserService {\r\n    static register(username, password) {\r\n        return remoteKinvey.post('user', '', 'basic', { username, password });\r\n    }\r\n\r\n    static login(username, password) {\r\n        return remoteKinvey.post('user', 'login', 'basic', { username, password });\r\n    }\r\n\r\n    static logout() {\r\n        return remoteKinvey.post('user', '_logout', 'kinvey');\r\n    }\r\n}\r\n\r\nexport default UserService;","const actionTypes = {\r\n    //Auth\r\n    LOGGIN_SUCCESS: 'LOGGIN_SUCCESS',\r\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n    AUTH_ERROR: 'AUTH_ERROR',\r\n    AUTH_REQUEST: 'AUTH_REQUEST',\r\n\r\n    //List\r\n    LIST_CREATED: 'LIST_CREATED',\r\n    LIST_UPDATED: 'LIST_UPDATED',\r\n    LIST_DELETED: 'LIST_DELETED',\r\n    FETCH_LISTS_SUCCESS: 'FETCH_LISTS_SUCCESS',\r\n    FIND_ONE_BY_ID: 'FIND_ONE_BY_ID',\r\n    LIST_BY_ID_FETCHED: 'LIST_BY_ID_FETCHED',\r\n\r\n    //Todo\r\n    TODO_CREATED: 'TODO_CREATED',\r\n    TODO_UPDATED: 'TODO_UPDATED',\r\n    TODO_DELETED: 'TODO_DELETED',\r\n    TODOS_FETCHED: 'TODOS_FETCHED',\r\n    TODOS_BY_LIST_FETCHED: 'TODOS_BY_LIST_FETCHED',\r\n    COMPLETED_TODOS_FETCHED: 'COMPLETED_TODOS_FETCHED',\r\n    TODO_BY_ID_FETCHED: 'TODO_BY_ID_FETCHED',\r\n\r\n    REMOTE_ERROR: 'REMOTE_ERROR',\r\n}\r\n\r\nexport default actionTypes;","import UserService from '../services/UserService';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\nimport Auth from '../components/users/Auth';\r\nimport actionTypes from '../constants/actionTypes';\r\n\r\nfunction loginSuccess() {\r\n    return {\r\n        type: actionTypes.LOGGIN_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction logoutSuccess() {\r\n    return {\r\n        type: actionTypes.LOGOUT_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction authError(msg) {\r\n    return {\r\n        type: actionTypes.AUTH_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction requestAuthentication() {\r\n    return {\r\n        type: actionTypes.AUTH_REQUEST\r\n    }\r\n}\r\n\r\nfunction login(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.login(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction register(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.register(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction logout() {\r\n    return (dispatch) => {\r\n        return UserService.logout()\r\n            .then(data => {\r\n                Auth.deauthenticateUser();\r\n                dispatch(logoutSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\nexport { login, register, logout, requestAuthentication }","import React, {Component} from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/authActions';\r\nimport toastr from 'toastr';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.login(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User login successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        console.log('Login Page render');\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-4 offset-md-4'>\r\n            <h1>Login</h1>\r\n                <p>Please enter your username and password.</p>\r\n                <LoginForm\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    error={this.state.error}\r\n                    onChange={this.onInputChangeHandler}\r\n                    onSubmit={this.onSubmitHandler} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login: (username, password) => dispatch(login(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\nimport {logout} from '../../actions/authActions';\r\n\r\nclass LogoutPage extends Component {\r\n    componentWillMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (!newProps.loggedIn) {\r\n            this.props.history.push('/users/login');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n      };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutPage);","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst RegisterForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='repeat'\r\n            placeholder='Confirm  Password'\r\n            value={props.confirmPassword}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Register'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport toastr from 'toastr';\r\nimport {register} from '../../actions/authActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            repeat: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.register(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User registration successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        const repeat = this.state.repeat;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (password !== repeat) {\r\n            error = 'Passwords missmatch!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-4 offset-md-4'>\r\n                    <h1>Register</h1>\r\n                    <p>Please fill in this form to create an account.</p>\r\n                    <RegisterForm\r\n                        username={this.state.username}\r\n                        password={this.state.password}\r\n                        repeat={this.state.repeat}\r\n                        error={this.state.error}\r\n                        onChange={this.onInputChangeHandler}\r\n                        onSubmit={this.onSubmitHandler} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        register: (username, password) => dispatch(register(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nconst COLLECTION_NAME = 'lists';\r\n\r\nclass ListService {\r\n    static create(data) {\r\n        return remoteKinvey.post('appdata', COLLECTION_NAME, 'kinvey', data);\r\n    }\r\n\r\n    static edit(id, data) {\r\n        return remoteKinvey.update('appdata', COLLECTION_NAME + `/${id}`, 'kinvey', data);\r\n    }\r\n\r\n    static delete(id) {\r\n        return remoteKinvey.remove('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n\r\n    static getAll() {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n\r\n    static getById(id) {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n}\r\n\r\nexport default ListService;","import ListService from '../services/ListService';\r\nimport actionTypes from '../constants/actionTypes';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\n\r\nfunction createSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_CREATED,\r\n        data\r\n    };\r\n}\r\n\r\nfunction editSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_UPDATED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction deleteSuccess(id) {\r\n    return {\r\n        type: actionTypes.LIST_DELETED,\r\n        id\r\n    }\r\n}\r\n\r\nfunction fetchSuccess(data) {\r\n    return {\r\n        type: actionTypes.FETCH_LISTS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nfunction fetchedOneSuccess(list) {\r\n    return {\r\n        type: actionTypes.LIST_BY_ID_FETCHED,\r\n        list\r\n    }\r\n}\r\n\r\nfunction remoteError(msg) {\r\n    return {\r\n        type: actionTypes.REMOTE_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction createList(data) {\r\n    return (dispatch) => {\r\n        return ListService.create(data)\r\n            .then(data => {\r\n                dispatch(createSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction editList(id, data) {\r\n    return (dispatch) => {\r\n        return ListService.edit(id, data)\r\n            .then(data => {\r\n                dispatch(editSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction deleteList(id) {\r\n    return (dispatch) => {\r\n        return ListService.delete(id)\r\n            .then(() => {\r\n                dispatch(deleteSuccess(id));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAll() {\r\n    console.log('Fetching lists!!!')\r\n    return (dispatch) => {\r\n        return ListService.getAll()\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchOne(id) {\r\n    return (dispatch) => {\r\n        return ListService.getById(id)\r\n            .then(data => {\r\n                dispatch(fetchedOneSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nexport { createList, fetchAll, fetchOne, editList, deleteList };","const crud = {\r\n    MODE_CREATE: 'MODE_CREATE',\r\n    MODE_READ: 'MODE_READ',\r\n    MODE_UPDATE: 'MODE_UPDATE',\r\n    MODE_DELETE: 'MODE_DELETE',\r\n}\r\n\r\nconst NavLinks = {\r\n    MAIN_PUBLIC: [\r\n        { label: 'Login', to: '/users/login' },\r\n        { label: 'Register', to: '/users/register' },\r\n    ],\r\n    MAIN_PRIVATE: [\r\n        { label: 'Home', to: '/' },\r\n        { label: 'Manage Lists', to: '/lists' },\r\n        { label: 'Logout', to: '/users/logout' },\r\n    ]\r\n}\r\n\r\nexport { crud, NavLinks };","import React from 'react';\r\nimport './ListThumb.css';\r\n//import { Link } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ListThumb = (props) => (\r\n    <div className='list-thumb'>\r\n        <h2>{props.list.name}</h2>\r\n        <Link className='btn btn-info' to={'/list/view/' + props.list._id}>View Details</Link>\r\n        <button onClick={(event) => (props.editHandler(event, props.list))}>[Edit]</button> \r\n        {/* <button onClick={(event) => (props.deleteHandler(event, props.list._id))}>[Delete]</button> */}\r\n    </div>\r\n);\r\n\r\nexport default ListThumb;","import React from 'react';\r\nimport ListThumb from './ListThumb';\r\n\r\nconst ShowAllLists = (props) => {\r\n    const data = props.data;\r\n    let listItems = Object.keys(data).map(key => (\r\n        <ListThumb \r\n            key={key} \r\n            list={data[key]} \r\n            editHandler={props.editHandler}\r\n            deleteHandler={props.deleteHandler} />\r\n    ));\r\n\r\n    //console.log('Render ShowAllLists');\r\n    return (\r\n        <div>\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowAllLists;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst ListForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>{props.error}</div>\r\n            <Input\r\n                name='name'\r\n                placeholder='Name'\r\n                value={props.name}\r\n                onChange={props.onChange} />\r\n            <br />\r\n            <Submit\r\n                value='Submit'\r\n                onClick={props.onSubmit} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ListForm;","import React, { Component} from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass CreateListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        //const data = { name: this.props.name };\r\n        this.props.createList(this.props.list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Create List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={this.onSubmitHandler}\r\n                    error={this.state.error} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateListPage","import React, { Component } from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass EditListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e, id, list) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        console.log(list);\r\n        this.props.editList(id, list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Edit List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={(e) => (this.onSubmitHandler(e, this.props.id, this.props.list))}\r\n                    error={this.state.error} /> \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditListPage;","import React, { Component } from 'react';\r\nimport { fetchAll } from '../../actions/listActions';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport {crud} from '../../constants/app';\r\nimport ShowAllLists from './ShowAllLists';\r\nimport CreateListPage from './CreateListPage';\r\nimport { createList, editList, deleteList } from '../../actions/listActions';\r\nimport toastr from 'toastr';\r\nimport EditListPage from './EditListPage';\r\n\r\nclass ManageListsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mode: crud.MODE_READ,\r\n            list: {\r\n                name: ''\r\n            },\r\n            error: ''\r\n        }\r\n\r\n        this.onShowCreateHandler = this.onShowCreateHandler.bind(this);\r\n        this.onChangeInputHandler = this.onChangeInputHandler.bind(this);\r\n        this.onShowUpdateHandler = this.onShowUpdateHandler.bind(this);\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.remote === actionTypes.FETCH_LISTS_SUCCESS) {\r\n            return;\r\n        }\r\n\r\n        this.props.fetchAll();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_CREATED) {\r\n            toastr.success('New list added successfully!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_UPDATED) {\r\n            toastr.success('The list was successfully updated!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_DELETED) {\r\n            toastr.success('The list was successfully deleted!');\r\n            this.setState({ mode: crud.MODE_READ });\r\n        }\r\n    }\r\n\r\n    onChangeInputHandler(e) {\r\n        this.setState({ list: { [e.target.name]: e.target.value } });\r\n    }\r\n\r\n    onShowCreateHandler(event) {\r\n        this.setState({ mode: crud.MODE_CREATE });\r\n    }\r\n\r\n    onShowUpdateHandler(e, list) {\r\n        this.setState({ mode: crud.MODE_UPDATE, list: {name: list.name}, id: list._id });\r\n    }\r\n\r\n    onDeleteHandler(e, id) {\r\n        this.setState({ mode: crud.MODE_DELETE });\r\n        this.props.deleteList(id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Manage Lists</h1>\r\n\r\n                {this.state.mode === crud.MODE_READ &&\r\n                    <div>\r\n                        <button\r\n                            onClick={this.onShowCreateHandler}>\r\n                            Add List\r\n                        </button>\r\n                        <hr />\r\n                        <ShowAllLists \r\n                            data={this.props.data} \r\n                            editHandler={this.onShowUpdateHandler}\r\n                            deleteHandler={this.onDeleteHandler} />\r\n                    </div>\r\n                }\r\n\r\n                {this.state.mode !== crud.MODE_READ &&\r\n                    <button\r\n                        onClick={() => (this.setState({mode: crud.MODE_READ}))}>\r\n                        Back to All Lists\r\n                    </button>\r\n                }\r\n\r\n                {this.state.mode === crud.MODE_CREATE &&\r\n                    <CreateListPage\r\n                        createList={this.props.createList}\r\n                        list={this.state.list}\r\n                        onChange={this.onChangeInputHandler} />\r\n                }\r\n                {this.state.mode === crud.MODE_UPDATE &&\r\n                    <EditListPage\r\n                        editList={this.props.editList}\r\n                        list={this.state.list}\r\n                        id={this.state.id}\r\n                        onChange={this.onChangeInputHandler}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.list.data,\r\n        remote: state.list.remote,\r\n        error: state.list.error,\r\n        changes: state.list.changes\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchAll: () => dispatch(fetchAll()),\r\n        createList: (data) => dispatch(createList(data)),\r\n        editList: (id, data) => dispatch(editList(id, data)),\r\n        deleteList: (id) => dispatch(deleteList(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageListsPage);","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nconst COLLECTION_NAME = 'todos';\r\n\r\nclass TodoService {\r\n    static create(data) {\r\n        return remoteKinvey.post('appdata', COLLECTION_NAME, 'kinvey', data);\r\n    }\r\n\r\n    static edit(id, data) {\r\n        return remoteKinvey.update('appdata', COLLECTION_NAME + `/${id}`, 'kinvey', data);\r\n    }\r\n\r\n    static delete(id) {\r\n        return remoteKinvey.remove('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n\r\n    static getAll() {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n\r\n    static getDaily(date) {\r\n        ///appdata/your-app-id/your-collection?query={\"your-date-property\":{\"$gt\":\"2010-04-29\"}}\r\n        const query = `?query={\"deadline\":{\"$lte\":\"${date}\"}}`;\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME + query, 'kinvey');\r\n    }\r\n\r\n    static getAllByList(listId) {\r\n        const query = `?query={\"list_id\":\"${listId}\"}`;\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME + query, 'kinvey');\r\n    }\r\n\r\n    static getCompleted(date) {\r\n        const query = `?query={\"complete_date\":\"${date}\"}`;\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME + query, 'kinvey');\r\n    }\r\n\r\n    static getById(id) {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n}\r\n\r\nexport default TodoService;","import TodoService from '../services/TodoService';\r\nimport actionTypes from '../constants/actionTypes';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\n\r\nfunction createSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODO_CREATED,\r\n        data\r\n    };\r\n}\r\n\r\nfunction editSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODO_UPDATED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction deleteSuccess(id) {\r\n    return {\r\n        type: actionTypes.TODO_DELETED,\r\n        id\r\n    }\r\n}\r\n\r\nfunction fetchSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODOS_FETCHED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction fetchedNyListSuccess(data) {\r\n    return {\r\n        type: actionTypes.TODOS_BY_LIST_FETCHED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction completedFetched(data) {\r\n    return {\r\n        type: actionTypes.COMPLETED_TODOS_FETCHED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction fetchedOneSuccess(todo) {\r\n    return {\r\n        type: actionTypes.TODO_BY_ID_FETCHED,\r\n        todo\r\n    }\r\n}\r\n\r\nfunction remoteError(msg) {\r\n    return {\r\n        type: actionTypes.REMOTE_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction createTodo(data) {\r\n    return (dispatch) => {\r\n        return TodoService.create(data)\r\n            .then(data => {\r\n                dispatch(createSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction editTodo(id, data) {\r\n    return (dispatch) => {\r\n        return TodoService.edit(id, data)\r\n            .then(data => {\r\n                dispatch(editSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction deleteTodo(id) {\r\n    return (dispatch) => {\r\n        return TodoService.delete(id)\r\n            .then(() => {\r\n                dispatch(deleteSuccess(id));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAll() {\r\n    console.log('Fetching todos');\r\n    return (dispatch) => {\r\n        return TodoService.getAll()\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAllByList(listId) {\r\n    return (dispatch) => {\r\n        return TodoService.getAllByList(listId)\r\n            .then(data => {\r\n                dispatch(fetchedNyListSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchDaily(date) {\r\n    console.log('Fetching daily todos');\r\n    return (dispatch) => {\r\n        return TodoService.getDaily(date)\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchCompleted(date) {\r\n    console.log('Fetching completed todos');\r\n    return (dispatch) => {\r\n        return TodoService.getCompleted(date)\r\n            .then(data => {\r\n                dispatch(completedFetched(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchOne(id) {\r\n    return (dispatch) => {\r\n        return TodoService.getById(id)\r\n            .then(data => {\r\n                dispatch(fetchedOneSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nexport { fetchAll, fetchDaily, fetchCompleted, fetchAllByList, fetchOne, createTodo, editTodo, deleteTodo };","/////////////////////////////// App Helper Functions /////////////////////////////////////\r\n// Temporary here but when grow too many will separate them by functionality/components //\r\n//////////////////////////////////////////////////////////////////////////////////////////\r\nclass AppHelper {\r\n    //(to go in TodoHelper)\r\n    static changeDeadline(oldDeadline, repeat) {\r\n        if(repeat === 0) {\r\n            return null;\r\n        }\r\n\r\n        let d = new Date(oldDeadline);\r\n        let newDeadline = new Date(d.setDate(d.getDate() + repeat));\r\n\r\n        return newDeadline.toISOString();\r\n    }\r\n\r\n    static deadlineIsInPast(oldDeadline) {\r\n        let today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        let d = new Date(oldDeadline);\r\n        d.setHours(0, 0, 0, 0);\r\n\r\n        return d < today;\r\n    }\r\n\r\n    static getDateNoHoursISO(date) {\r\n        date.setHours(2, 0, 0, 0);\r\n        return date.toISOString();\r\n    }\r\n\r\n\r\n\r\n    // Delete element from object|array regardless (to go in StoreHelper)\r\n    static deleteFromData(data, key) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            return;\r\n        }\r\n\r\n        if (isNaN(parseInt(key)) || !(data instanceof Array)) {\r\n            delete data[key];\r\n        } else {\r\n            data.splice(key, 1);\r\n        }\r\n    }\r\n\r\n    // Store data in associative array by given key (to go in StoreHelper)\r\n    static storeDataByKey(data, key) {\r\n        let store = {};\r\n        data.forEach(element => {\r\n            store[element[key]] = element;\r\n        });\r\n\r\n        return store;\r\n    }\r\n}\r\n\r\nexport default AppHelper;","import React, {Component} from 'react';\r\n\r\nclass StatusBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checked: this.props.checked\r\n        }\r\n\r\n        this.toggleState = this.toggleState.bind(this);\r\n    }\r\n\r\n\r\n    toggleState(e) {\r\n        const checked = !this.state.checked;\r\n        this.setState({checked});\r\n        console.log('Status updated');\r\n\r\n        if(this.props.onClick !== undefined) {\r\n            this.props.onClick(this.props.todo);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let squareClass = this.state.checked ? 'far fa-check-square' : 'far fa-square';\r\n\r\n        return(\r\n            <span \r\n                onClick={this.toggleState}>\r\n                <i className={squareClass}></i>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusBox;","import React, { Component } from 'react';\r\n\r\nimport './Progress.css';\r\n\r\nclass Progress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: 0\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onAdd = this.onAdd.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: Number(event.target.value) });\r\n    }\r\n\r\n    onAdd(num) {\r\n        let newValue = this.state.value + Number(num);\r\n        this.setState({ value: newValue });\r\n    }\r\n\r\n    onSave() {\r\n        this.props.onSave(this.props.todo._id, this.state.value);\r\n        this.setState({ value: 0 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='progress'>\r\n                <span>{this.props.todo.progress} / {this.props.todo.target} {this.props.todo.type}</span>\r\n                <button onClick={() => this.onAdd(-1)} className='input-control'>-</button>\r\n                <input\r\n                    type='text'\r\n                    name='progress'\r\n                    value={this.state.value}\r\n                    onChange={this.handleChange} />\r\n                <button onClick={() => this.onAdd(1)} className='input-control'>+</button>\r\n                <button className='submit'\r\n                    onClick={this.onSave}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Progress;","import React from 'react';\r\nimport StatusBox from './StatusBox';\r\nimport Progress from './Progress';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Todo.css';\r\n\r\nconst TodoDaily = (props) => {\r\n    const hiddenRowId = 'hidden-row-' + props.todo._id;\r\n    const editBtn = (\r\n        <Link to={'/todo/edit/' + props.todo._id} className='btn btn-secondary'>Edit</Link>\r\n    );\r\n    const completed = props.todo.complete_date !== null;\r\n\r\n    return (\r\n        <tr>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <StatusBox\r\n                    checked={completed}\r\n                    todo={props.todo}\r\n                    onClick={props.onUpdateStatus} />\r\n                <span className='margin-left-10'>{props.todo.name}</span>\r\n            </td>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <Progress\r\n                    todo={props.todo}\r\n                    onSave={props.onUpdateProgress} />\r\n            </td>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n            <button className='btn btn-success'>Timer</button>\r\n            {editBtn}\r\n            </td>\r\n            <td colSpan='3' className='align-middle d-lg-none d-md-table-cell'>\r\n                <table className='mobile-inside'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='align-middle first'>\r\n                                <StatusBox\r\n                                    checked={completed}\r\n                                    todo={props.todo}\r\n                                    onClick={props.onUpdateStatus} />\r\n                                <span className='margin-left-10'>{props.todo.name}</span>\r\n                            </td>\r\n                            <td className='align-middle'>\r\n                            <button className='btn-collapse align-middle' data-toggle=\"collapse\" data-target={'.' + hiddenRowId}>V</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={hiddenRowId + ' collapse'}>\r\n                            <td colSpan='2' className='align-middle'>\r\n                                <Progress\r\n                                    todo={props.todo}\r\n                                    onSave={props.onUpdateProgress} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={hiddenRowId + ' collapse'}>\r\n                            <td colSpan='2' className='align-middle'>\r\n                                {editBtn}\r\n                                <button className='btn btn-success'>Timer</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TodoDaily;","import React from 'react';\r\nimport DAilyTodo from './DailyTodo';\r\n\r\nconst DailyTodosList = (props) => {\r\n    const data = props.data;\r\n    let rows = Object.keys(data).map(key => {\r\n        return <DAilyTodo\r\n            key={key}\r\n            todo={data[key]}\r\n            onUpdateStatus={props.onUpdateStatus}\r\n            onUpdateProgress={props.onUpdateProgress}\r\n            onEditClick={props.onEditClick} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-responsive'>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyTodosList;","import React from 'react';\r\nimport StatusBox from './StatusBox';\r\n\r\nimport './Todo.css';\r\n\r\nconst TodoDaily = (props) => {\r\n    const hiddenRowId = 'hidden-row-' + props.todo._id;\r\n    const completed = props.todo.complete_date !== null;\r\n    const progress = `${props.todo.progress} / ${props.todo.target} ${props.todo.type}`;\r\n\r\n    return (\r\n        <tr>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <StatusBox\r\n                    checked={completed}\r\n                    todo={props.todo}\r\n                    onClick={props.onUpdateStatus} />\r\n                <span className='margin-left-10'>{props.todo.name}</span>\r\n            </td>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <span>{progress}</span>\r\n            </td>\r\n            <td colSpan='3' className='align-middle d-lg-none d-md-table-cell'>\r\n                <table className='mobile-inside'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='align-middle first'>\r\n                                <StatusBox\r\n                                    checked={completed}\r\n                                    todo={props.todo}\r\n                                    onClick={props.onUpdateStatus} />\r\n                                <span className='margin-left-10'>{props.todo.name}</span>\r\n                            </td>\r\n                            <td className='align-middle'>\r\n                            <button className='btn-collapse align-middle' data-toggle=\"collapse\" data-target={'.' + hiddenRowId}>V</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={hiddenRowId + ' collapse'}>\r\n                            <td colSpan='2' className='align-middle'>\r\n                            <span>{progress}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TodoDaily;","import React from 'react';\r\nimport CompletedTodo from './CompletedTodo';\r\n\r\nconst CompletedTodosList = (props) => {\r\n    const data = props.data;\r\n    let rows = Object.keys(data).map(key => {\r\n        return <CompletedTodo\r\n            key={key}\r\n            todo={data[key]}\r\n            onUpdateStatus={props.onUpdateStatus} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-responsive'>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompletedTodosList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchDaily, fetchCompleted, editTodo, deleteTodo } from '../../actions/todoActions';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport toastr from 'toastr';\r\nimport AppHelper from '../common/AppHelper';\r\n//import TodoHelper from './TodoHelper';\r\nimport { Link } from 'react-router-dom';\r\nimport DailyTodosList from './DailyTodosList';\r\nimport CompletedTodosList from './CompletedTodosList';\r\n\r\nclass DailyTodosPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showCompleted: false\r\n        }\r\n\r\n        this.onUpdateStatus = this.onUpdateStatus.bind(this);\r\n        this.onUpdateProgress = this.onUpdateProgress.bind(this);\r\n        this.onShowCompleted = this.onShowCompleted.bind(this);\r\n        this.onHideCompleted = this.onHideCompleted.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //May need this if decide to have separate action types for all fetches, right now it's useless\r\n        if (this.props.remote === actionTypes.TODOS_FETCHED) {\r\n            //return;\r\n        }\r\n\r\n        this.loadDailyTodos();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODOS_FETCHED) {\r\n            //Do deadline check\r\n            for (const key in newProps.data) {\r\n                const todo = newProps.data[key];\r\n                if (AppHelper.deadlineIsInPast(todo.deadline)) {\r\n                    todo.deadline = AppHelper.getDateNoHoursISO(new Date());\r\n                    todo.noncompleted_count++;\r\n                    this.props.editTodo(key, todo);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODO_UPDATED) {\r\n            this.loadDailyTodos();\r\n        }\r\n    }\r\n\r\n    loadDailyTodos() {\r\n        const date = AppHelper.getDateNoHoursISO(new Date());\r\n        this.props.fetchDaily(date);\r\n        this.props.fetchCompleted(date);\r\n    }\r\n\r\n    onUpdateStatus(todo) {\r\n        if (todo.complete_date) {\r\n            // change it to false (uncomplete)\r\n            todo.deadline = AppHelper.getDateNoHoursISO(new Date());\r\n            todo.completed_count--;\r\n            todo.complete_date = null;\r\n        } else {\r\n            console.log('Want to set it to complete');\r\n            //change it to true (complete)\r\n            todo.deadline = AppHelper.changeDeadline(todo.deadline, todo.Repeat);\r\n            todo.completed_count++;\r\n            todo.complete_date = AppHelper.getDateNoHoursISO(new Date());\r\n        }\r\n\r\n        this.props.editTodo(todo._id, todo);\r\n    }\r\n\r\n    onUpdateProgress(id, newProgress) {\r\n        let todo = this.props.data[id];\r\n        todo.progress += newProgress;\r\n\r\n        if (todo.progress < 0) todo.progress = 0;\r\n        this.props.editTodo(id, todo);\r\n    }\r\n\r\n    onShowCompleted() {\r\n        this.setState({ showCompleted: true });\r\n        console.log('Need to render completed');\r\n    }\r\n\r\n    onHideCompleted() {\r\n        this.setState({ showCompleted: false });\r\n        console.log('Need to hide completed');\r\n    }\r\n\r\n\r\n    render() {\r\n        const completedBtnLabel = this.state.showCompleted ? 'Hide completed' : 'Show completed';\r\n        const completedHandler = this.state.showCompleted ? this.onHideCompleted : this.onShowCompleted;\r\n\r\n        return (\r\n            <div>\r\n                <h1>Daily Todos</h1>\r\n                <Link to='/todo/add' className='btn btn-dark'>Add Todo</Link>\r\n                <hr />\r\n                <DailyTodosList\r\n                    data={this.props.data}\r\n                    onEditClick={this.onShowUpdateHandler}\r\n                    onUpdate={this.onUpdateHandler}\r\n                    onDeleteClick={this.onDeleteHandler}\r\n                    onUpdateStatus={this.onUpdateStatus}\r\n                    onUpdateProgress={this.onUpdateProgress} />\r\n                <hr />\r\n                <button onClick={completedHandler} className='btn btn-info'>{completedBtnLabel}</button>\r\n                {this.state.showCompleted && this.props.completed &&\r\n                    <CompletedTodosList\r\n                        data={this.props.completed}\r\n                        onEditClick={this.onShowUpdateHandler}\r\n                        onUpdate={this.onUpdateHandler}\r\n                        onDeleteClick={this.onDeleteHandler}\r\n                        onUpdateStatus={this.onUpdateStatus}\r\n                        onUpdateProgress={this.onUpdateProgress} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.todo.data,\r\n        completed: state.todo.completed,\r\n        remote: state.todo.remote,\r\n        error: state.todo.error,\r\n        changes: state.todo.changes\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchDaily: (date) => dispatch(fetchDaily(date)),\r\n        fetchCompleted: (date) => dispatch(fetchCompleted(date)),\r\n        editTodo: (id, data) => dispatch(editTodo(id, data)),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyTodosPage);","import React from 'react';\r\n\r\nconst Select = (props) => {\r\n    let options = <option value=''>No values</option>\r\n    if (props.options) {\r\n        options = props.options.map((op, index) => {\r\n            return <option key={index} value={op}>{op}</option>\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <select\r\n                className='form-control'\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}>{options}</select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\nimport Select from '../common/forms/Select';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport moment from 'moment';\r\n\r\nconst TodoForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='name'\r\n            placeholder='Name'\r\n            value={props.todo.name}\r\n            onChange={props.onChange} />\r\n        <Select\r\n            name='type'\r\n            placeholder='Type'\r\n            value={props.todo.type}\r\n            options={([\r\n                'minutes',\r\n                'times',\r\n                'amount'])}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='number'\r\n            name='target'\r\n            placeholder='Target'\r\n            value={props.todo.target}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        {props.allProps &&\r\n            <div>\r\n                <Input\r\n                    type='number'\r\n                    name='Repeat'\r\n                    placeholder='Repeat'\r\n                    value={props.todo.Repeat}\r\n                    onChange={props.onChange} />\r\n                <br />\r\n                Start Date:\r\n                <DatePicker\r\n                    selected={moment(props.todo.deadline)} \r\n                    onChange={(date => props.onChange({target: {name: 'deadline', value: date.toISOString() }}))} />\r\n            </div>\r\n\r\n        }\r\n        <Submit\r\n            value={props.submitValue}\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default TodoForm;","class FormHelper {\r\n    static handleInputChange(event, stateField) {\r\n        const target = event.target;\r\n        const field = target.name;\r\n        let value = target.value;\r\n\r\n        if(value !== '' && !isNaN(value)) {\r\n            value = Number(value);\r\n        }\r\n\r\n        const state = this.state[stateField];\r\n        state[field] = value;\r\n        this.setState({ stateField: state });\r\n    }\r\n}\r\n\r\nexport default FormHelper;","import AppHelper from '../common/AppHelper';\r\nimport { crud } from '../../constants/app';\r\n\r\nclass TodoHelper {\r\n    static getDefaultState() {\r\n        return {\r\n            selectedTodo: null,\r\n            todo: {\r\n                name: '',\r\n                type: 'Single',\r\n                list_id: null,\r\n                target: 1,\r\n                progress: 0,\r\n                done: false,\r\n                Repeat: 0,\r\n                completed_count: 0,\r\n                noncompleted_count: 0,\r\n                deadline: AppHelper.getDateNoHoursISO(new Date())\r\n            },\r\n            error: '',\r\n            mode: crud.MODE_READ\r\n        }\r\n    }\r\n\r\n    //Now here can do real validation!!!\r\n    static isValidForm() {\r\n        const name = this.state.todo.name;\r\n        const type = this.state.todo.type;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '' || type === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n}\r\n\r\nexport default TodoHelper;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\n\r\nimport { createTodo } from '../../actions/todoActions';\r\nimport actionTypes from '../../constants/actionTypes';\r\n\r\nimport TodoForm from './TodoForm';\r\nimport AppHelper from '../common/AppHelper';\r\nimport FormHelper from '../common/forms/FormHelper';\r\nimport TodoHelper from './TodoHelper';\r\n\r\nclass CreateTodoPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const listId = this.props.match.params.listId ? this.props.match.params.listId : null;\r\n\r\n        this.state ={\r\n            todo: {\r\n                name: '',\r\n                type: 'minutes',\r\n                list_id: listId,\r\n                target: 30,\r\n                progress: 0,\r\n                done: false,\r\n                Repeat: 0,\r\n                completed_count: 0,\r\n                noncompleted_count: 0,\r\n                deadline: AppHelper.getDateNoHoursISO(new Date()),\r\n                complete_date: null\r\n            },\r\n            error: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        //TODO - check best practice - is showing remote errors good?\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODO_CREATED) {\r\n            if(this.props.match.params.listId) {\r\n                this.props.history.push('/list/view/' + this.props.match.params.listId);\r\n            } else {\r\n                this.props.history.push('/');\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        FormHelper.handleInputChange.bind(this)(event, 'todo');\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(!TodoHelper.isValidForm.bind(this)()) {\r\n            return;\r\n        }\r\n\r\n        this.props.createTodo(this.state.todo);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.todo);\r\n        return(\r\n            <div>\r\n                <h1>Create Todo</h1>\r\n                <TodoForm\r\n                    todo={this.state.todo}\r\n                    onChange={this.handleInputChange}\r\n                    submitValue='Add'\r\n                    onSubmit={this.handleSubmit}\r\n                    error={this.state.error} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        remote: state.todo.remote,\r\n        error: state.todo.error,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createTodo: (data) => dispatch(createTodo(data)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTodoPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\n\r\nimport { fetchOne, editTodo } from '../../actions/todoActions';\r\nimport actionTypes from '../../constants/actionTypes';\r\n\r\nimport TodoForm from './TodoForm';\r\n//import AppHelper from '../common/AppHelper';\r\nimport FormHelper from '../common/forms/FormHelper';\r\nimport TodoHelper from './TodoHelper';\r\n\r\n//// IMPORTANT //////////////////////\r\n//// After successful edit need to redirect to the place it came from?? or not??\r\n///// Need to decide ///////////////////////////////\r\nclass EditTodoPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todo: null,\r\n            error: '',\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id\r\n\r\n        const todo = this.props.data[id];\r\n\r\n        if(todo) {\r\n            this.setState({todo});\r\n        } else {\r\n            this.props.getById(id);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        //TODO - check best practice - is showing remote errors good?\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            this.props.history.push('/');\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODO_BY_ID_FETCHED) {\r\n            this.setState({ todo: newProps.todo });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.TODO_UPDATED) {\r\n            const listId = newProps.todo.list_id;\r\n            if (listId) {\r\n                this.props.history.push('/list/view/' + listId);\r\n            } else {\r\n                this.props.history.push('/');\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        FormHelper.handleInputChange.bind(this)(event, 'todo');\r\n        console.log(event.target);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!TodoHelper.isValidForm.bind(this)()) {\r\n            return;\r\n        }\r\n\r\n        this.props.editTodo(this.state.todo._id, this.state.todo);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.todo && <div>Loading...</div>}\r\n                {this.state.todo &&\r\n                    <div>\r\n                        <h1>Create Todo</h1>\r\n                        <TodoForm\r\n                            allProps={true}\r\n                            todo={this.state.todo}\r\n                            onChange={this.handleInputChange}\r\n                            submitValue='Edit'\r\n                            onSubmit={this.handleSubmit}\r\n                            error={this.state.error} />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        todo: state.todo.selected,\r\n        data: state.todo.data,\r\n        remote: state.todo.remote,\r\n        error: state.todo.error,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        editTodo: (id, data) => dispatch(editTodo(id, data)),\r\n        getById: (id) => dispatch(fetchOne(id)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTodoPage);","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport './Todo.css';\r\n\r\nconst StatsTodo = (props) => {\r\n    const todo = props.todo;\r\n    const hiddenRowId = 'hidden-row-' + props.todo._id;\r\n    const editBtn = (\r\n        <Link to={'/todo/edit/' + props.todo._id} className='btn btn-secondary'>Edit</Link>\r\n    );\r\n    const stats = 'Repeat every: ' + todo.Repeat + ' days -- Target (' + todo.type + '): ' + todo.target; \r\n\r\n    return (\r\n        <tr>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <span className='margin-left-10'>{props.todo.name}</span>\r\n            </td>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                <span>{stats}</span>\r\n            </td>\r\n            <td className='align-middle d-none d-lg-table-cell'>\r\n                {editBtn}\r\n                {<button className='btn btn-secondary' onClick={(e) => (props.onDeleteClick(e, props.todo._id))}>[Delete]</button>}\r\n            </td>\r\n            <td colSpan='3' className='align-middle d-lg-none d-md-table-cell'>\r\n                <table className='mobile-inside'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='align-middle first'>\r\n                                <span className='margin-left-10'>{props.todo.name}</span>\r\n                            </td>\r\n                            <td className='align-middle'>\r\n                                <button className='btn-collapse align-middle' data-toggle=\"collapse\" data-target={'.' + hiddenRowId}>V</button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={hiddenRowId + ' collapse'}>\r\n                            <td colSpan='2' className='align-middle'>\r\n                                <span>{stats}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className={hiddenRowId + ' collapse'}>\r\n                            <td colSpan='2' className='align-middle'>\r\n                                {editBtn}\r\n                                {<button className='btn btn-secondary' onClick={(e) => (props.onDeleteClick(e, props.todo._id))}>[Delete]</button>}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default StatsTodo;","import React from 'react';\r\nimport StatsTodo from './StatsTodo';\r\n\r\nconst StatsTodosList = (props) => {\r\n    const data = props.data;\r\n    let rows = Object.keys(data).map(key => {\r\n        return <StatsTodo\r\n            key={key}\r\n            todo={data[key]}\r\n            onUpdateStatus={props.onUpdateStatus}\r\n            onUpdateProgress={props.onUpdateProgress}\r\n            onEditClick={props.onEditClick}\r\n            onDeleteClick={props.onDeleteClick} />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-responsive'>\r\n                <table className=\"table table-hover\">\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StatsTodosList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { fetchAllByList, deleteTodo } from '../../actions/todoActions';\r\nimport { fetchOne } from '../../actions/listActions';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport StatsTodosList from '../todos/StatsTodosList';\r\n\r\nclass ViewListDetailsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            listId: null\r\n        }\r\n\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.remote === actionTypes.TODOS_FETCHED) {\r\n            //return;\r\n        }\r\n\r\n        const listId = this.props.match.params.id;\r\n        this.props.fetchOne(listId);\r\n        this.props.fetchTodosByList(listId); // replace with fetch by listId \r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            //TODO redirect\r\n            return;\r\n        }\r\n\r\n        if(newProps.listRemote === actionTypes.LIST_BY_ID_FETCHED &&\r\n            newProps.remote === actionTypes.TODOS_BY_LIST_FETCHED) {\r\n            const listId = newProps.list._id;\r\n            this.setState({listId});\r\n        }\r\n\r\n        //TODO - preloader\r\n    }\r\n\r\n    onDeleteHandler(event, id) {\r\n        this.props.deleteTodo(id);\r\n    }\r\n\r\n    render() {\r\n        const list = this.props.list !== undefined ? this.props.list : null;\r\n        console.log(list);\r\n        return (\r\n            <div>\r\n            {this.state.listId && \r\n                <div>\r\n                <h1>{list.name}</h1>\r\n                <Link to={'/todo/add/' + this.state.listId} className='btn btn-dark'>Add Todo</Link>\r\n                        <hr />\r\n                        <StatsTodosList \r\n                            data={this.props.data}\r\n                            onUpdate={this.onUpdateHandler}\r\n                            onDeleteClick={this.onDeleteHandler} />\r\n            </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.todo.dataByList,\r\n        remote: state.todo.remote,\r\n        error: state.todo.error,\r\n        listRemote: state.list.remote,\r\n        list: state.list.selected,\r\n        //changes: state.todo.changes\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchTodosByList: (id) => dispatch(fetchAllByList(id)),\r\n        fetchOne: (id) => dispatch(fetchOne(id)),\r\n        deleteTodo: (id) => dispatch(deleteTodo(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewListDetailsPage);","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nimport AboutPage from '../../AboutPage';\r\nimport LoginPage from '../../users/LoginPage';\r\nimport LogoutPage from '../../users/LogoutPage';\r\nimport RegisterPage from '../../users/RegisterPage';\r\nimport ManageListsPage from '../../lists/ManageListsPage';\r\nimport DailyTodosPage from '../../todos/DailyTodosPage';\r\nimport CreateTodoPage from '../../todos/CreateTodoPage';\r\nimport EditTodoPage from '../../todos/EditTodoPage';\r\nimport ViewListDetailsPage from '../../lists/ViewListDetailsPage';\r\n\r\nconst Routes = (props) => (\r\n    <Switch>\r\n        <PrivateRoute path='/' exact component={DailyTodosPage} />\r\n        <Route path='/about' component={AboutPage} />\r\n        <Route path='/users/login' component={LoginPage} />\r\n        <Route path='/users/register' component={RegisterPage} />\r\n        <PrivateRoute path='/users/logout' component={LogoutPage} />\r\n        <PrivateRoute path='/lists' component={ManageListsPage} />\r\n        <PrivateRoute path='/list/view/:id' component={ViewListDetailsPage} />\r\n        <PrivateRoute path='/todo/add/:listId?' component={CreateTodoPage} />\r\n        <PrivateRoute path='/todo/edit/:id' component={EditTodoPage} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = (props) => (\r\n    <li className=\"nav-item\">\r\n        <NavLink exact className='nav-link' activeClassName='active' to={props.to}>{props.label}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\n\r\nconst Menu = (props) => {\r\n    let menuItems = props.menuItems.map((item, index) => {\r\n        return <MenuItem key={index} label={item.label} to={item.to} />\r\n    });\r\n\r\n    return <ul className=\"navbar-nav\">\r\n        {menuItems}\r\n    </ul>\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport Menu from './Menu';\r\nimport { NavLinks } from '../../../constants/app';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        let menuItems = this.props.loggedIn ? NavLinks.MAIN_PRIVATE : NavLinks.MAIN_PUBLIC;\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <Menu menuItems={menuItems} />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './navbar/Navbar';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <Navbar loggedIn={props.loggedIn} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright 2018 - Organizer App by Willbe.S</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Routes from './components/common/routes/Routes';\r\nimport Header from './components/common/Header';\r\nimport Footer from './components/common/Footer';\r\nimport { requestAuthentication } from './actions/authActions';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.isAuthenticated();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header \r\n          loggedIn={this.props.loggedIn} />\r\n        <div className=\"container margin-top-30\">\r\n          <Routes />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.auth.loggedIn,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    isAuthenticated: () => dispatch(requestAuthentication()),\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { authReducer } from './authReducer';\r\nimport { listReducer } from './listReducer';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nexport default {\r\n    auth: authReducer,\r\n    list: listReducer,\r\n    todo: todoReducer\r\n};","import actionTypes from '../constants/actionTypes';\r\nimport Auth from '../components/users/Auth';\r\n\r\nexport function authReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_REQUEST:\r\n            return Object.assign({}, state, { loggedIn: Auth.isUserAuthenticated(), error: false });\r\n        case actionTypes.LOGGIN_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: true, error: false });\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: false, error: false });\r\n        case actionTypes.AUTH_ERROR:\r\n            return Object.assign({}, state, { loggedIn: false, error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}","import actionTypes from '../constants/actionTypes';\r\nimport AppHelper from '../components/common/AppHelper';\r\n\r\nexport function listReducer(state = { data: {}, remote: null, error: null, changes: 0 }, action) {\r\n    let newState = null;\r\n    state.changes++;\r\n    switch (action.type) {\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return { data: {}, remote: null, error: null, changes: 0 };\r\n\r\n        case actionTypes.LIST_CREATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_CREATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.LIST_UPDATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_UPDATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.LIST_DELETED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_DELETED, error: null });\r\n            AppHelper.deleteFromData(newState.data, action.id);\r\n            return newState;\r\n\r\n        case actionTypes.FETCH_LISTS_SUCCESS:\r\n            return Object.assign({}, state, { data: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.FETCH_LISTS_SUCCESS, error: null });\r\n\r\n        case actionTypes.LIST_BY_ID_FETCHED:\r\n            return Object.assign({}, state, { selected: action.list, remote: actionTypes.LIST_BY_ID_FETCHED, error: null });\r\n\r\n        case actionTypes.REMOTE_ERROR:\r\n            //TODO - decide the best place to handle remote errors\r\n            return Object.assign({}, state, { error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}","import actionTypes from '../constants/actionTypes';\r\nimport AppHelper from '../components/common/AppHelper';\r\n\r\nexport function todoReducer(state = { data: {}, selected: null, dataByList: null, remote: null, error: null, changes: 0 }, action) {\r\n    let newState = null;\r\n    state.changes++;\r\n    switch (action.type) {\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return { data: {}, remote: null, error: null, changes: 0 };\r\n\r\n        case actionTypes.TODO_CREATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.TODO_CREATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.TODO_UPDATED:\r\n            newState = Object.assign({}, state, { selected: action.data, remote: actionTypes.TODO_UPDATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n\r\n        case actionTypes.TODO_DELETED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.TODO_DELETED, error: null });\r\n            AppHelper.deleteFromData(newState.data, action.id);\r\n            return newState;\r\n\r\n        case actionTypes.TODOS_FETCHED:\r\n            return Object.assign({}, state, { data: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.TODOS_FETCHED, error: null });\r\n\r\n        case actionTypes.COMPLETED_TODOS_FETCHED:\r\n            return Object.assign({}, state, { completed: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.COMPLETED_TODOS_FETCHED, error: null });\r\n\r\n        case actionTypes.TODOS_BY_LIST_FETCHED:\r\n            return Object.assign({}, state, { dataByList: AppHelper.storeDataByKey(action.data, '_id'), remote: actionTypes.TODOS_BY_LIST_FETCHED, error: null });\r\n\r\n        case actionTypes.TODO_BY_ID_FETCHED:\r\n            return Object.assign({}, state, { selected: action.todo, remote: actionTypes.TODO_BY_ID_FETCHED, error: null });\r\n\r\n        case actionTypes.REMOTE_ERROR:\r\n            return Object.assign({}, state, { error: action.message });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport reducers from './reducers/reducers';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(combineReducers(reducers), applyMiddleware(thunk));\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}