{"version":3,"sources":["components/users/Auth.js","components/common/routes/PrivateRoute.js","components/HomePage.js","components/AboutPage.js","components/common/forms/Input.js","components/common/forms/Submit.js","components/users/LoginForm.js","api/remoteKinvey.js","services/UserService.js","constants/actionTypes.js","actions/authActions.js","components/users/LoginPage.js","components/users/LogoutPage.js","components/users/RegisterForm.js","components/users/RegisterPage.js","services/ListService.js","actions/listActions.js","components/lists/ListThumb.js","components/lists/ShowAllLists.js","components/lists/ListForm.js","components/lists/CreateListPage.js","components/lists/EditListPage.js","components/lists/ManageListsPage.js","components/common/routes/Routes.js","components/common/navbar/MenuItem.js","components/common/navbar/Menu.js","constants/NavLinks.js","components/common/navbar/Navbar.js","components/common/Header.jsx","components/common/Footer.jsx","App.js","serviceWorker.js","reducers/reducers.js","reducers/authReducer.js","reducers/listReducer.js","index.js"],"names":["Auth","window","localStorage","removeItem","token","setItem","getItem","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router_dom_es","assign","render","props","isUserAuthenticated","to","pathname","state","from","location","HomePage","className","AboutPage","Input","type","htmlFor","name","placeholder","value","onChange","Submit","onClick","LoginForm","error","forms_Input","username","password","forms_Submit","onSubmit","remoteKinvey","BASE_URL","APP_KEY","APP_SECRET","makeRequest","method","module","endpoint","auth","url","headers","Authorization","concat","btoa","getToken","makeAuth","Content-Type","get","$","ajax","post","data","obj","JSON","stringify","update","remove","handleError","reason","responseJSON","description","UserService","actionTypes","LOGGIN_SUCCESS","LOGOUT_SUCCESS","AUTH_ERROR","AUTH_REQUEST","REMOTE_ERROR","LIST_CREATED","LIST_UPDATED","LIST_DELETED","FETCH_LISTS_SUCCESS","FIND_ONE_BY_ID","loginSuccess","authError","msg","message","logout","dispatch","then","deauthenticateUser","catch","err","LoginPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChangeHandler","bind","assertThisInitialized","onSubmitHandler","e","setState","defineProperty","target","preventDefault","isValidForm","login","toLowerCase","newProps","toastr","loggedIn","success","history","push","formIsValid","console","log","users_LoginForm","connect","authenticateUser","_kmd","authtoken","LogoutPage","RegisterForm","confirmPassword","RegisterPage","repeat","register","users_RegisterForm","ListService","id","remoteError","createList","create","createSuccess","editList","edit","editSuccess","deleteList","delete","deleteSuccess","fetchAll","getAll","fetchSuccess","ListThumb","list","event","editHandler","deleteHandler","ShowAllLists","listItems","keys","map","key","components_lists_ListThumb","ListForm","CreateListPage","lists_ListForm","EditListPage","_this2","MODE_READ","ManageListsPage","mode","onShowCreateHandler","onChangeInputHandler","onShowUpdateHandler","onDeleteHandler","remote","_id","lists_ShowAllLists","lists_CreateListPage","lists_EditListPage","Routes","routes_PrivateRoute","path","exact","MenuItem","activeClassName","label","Menu","menuItems","item","index","navbar_MenuItem","NavLinks","MAIN_PUBLIC","MAIN_PRIVATE","Navbar","data-toggle","data-target","navbar_Menu","Header","navbar_Navbar","Footer","App","isAuthenticated","common_Header","routes_Routes","common_Footer","withRouter","Boolean","hostname","match","reducers","arguments","length","undefined","action","newState","hasOwnProperty","isNaN","parseInt","Array","splice","store","forEach","element","storeData","createStore","combineReducers","applyMiddleware","thunk","subscribe","getState","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c00d114.chunk.js","sourcesContent":["class Auth {\r\n    static removeUser() {\r\n        window.localStorage.removeItem('user');\r\n    }\r\n\r\n    static authenticateUser(token) {\r\n        window.localStorage.setItem('token', token);\r\n    }\r\n\r\n    static isUserAuthenticated() {\r\n        return window.localStorage.getItem('token') !== null;\r\n    }\r\n\r\n    static deauthenticateUser() {\r\n        window.localStorage.removeItem('token');\r\n    }\r\n\r\n    static getToken() {\r\n        return window.localStorage.getItem('token');\r\n    }\r\n}\r\n\r\nexport default Auth;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport Auth from '../../users/Auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        Auth.isUserAuthenticated() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n                <Redirect to={{\r\n                    pathname: '/users/login',\r\n                    state: { from: props.location }\r\n                }} />\r\n            )\r\n    )\r\n    } />\r\n)\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\n\r\n\r\nconst HomePage = (props) => (\r\n    <div className='row'>\r\n        <div className='col-md-12'>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = (props) => (\r\n    <div className='row'>\r\n        <div className='col-md-12'>\r\n            <h1>About Page</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    let type = props.type || 'text';\r\n\r\n    return (\r\n        <div className='form-group'>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <input\r\n                type={type}\r\n                className='form-control'\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Submit = (props) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className='btn btn-primary'\r\n                type='submit'\r\n                value={props.value}\r\n                onClick={props.onClick} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Submit;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst LoginForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Login'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default LoginForm;","import $ from 'jquery';\r\nimport Auth from '../components/users/Auth';\r\n\r\nconst remoteKinvey = (() => {\r\n    const BASE_URL = 'https://baas.kinvey.com/';\r\n    const APP_KEY = 'kid_H1L5OCFUW'; // APP KEY HERE\r\n    const APP_SECRET = '338746648e3b4bfa8e83a8ac221a1acc'; // APP SECRET HERE\r\n\r\n    function makeAuth(auth) {\r\n        if (auth === 'basic') {\r\n            return `Basic ${btoa(APP_KEY + \":\" + APP_SECRET)}`;\r\n        } else {\r\n            let token = Auth.getToken();\r\n            return `Kinvey ${token}`\r\n        }\r\n    }\r\n\r\n    // request method (GET, POST, PUT)\r\n    // kinvey module (user/appdata)\r\n    // url endpoint\r\n    // auth\r\n    function makeRequest(method, module, endpoint, auth) {\r\n        return {\r\n            url: BASE_URL + module + '/' + APP_KEY + '/' + endpoint,\r\n            method: method,\r\n            headers: {\r\n                'Authorization': makeAuth(auth),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    }\r\n\r\n    function get(module, endpoint, auth) {\r\n        //console.log(makeRequest('GET', module, endpoint, auth));\r\n        return $.ajax(makeRequest('GET', module, endpoint, auth));\r\n    }\r\n\r\n    function post(module, endpoint, auth, data) {\r\n        let obj = makeRequest('POST', module, endpoint, auth);\r\n        if (data) {\r\n            obj.data = JSON.stringify(data);\r\n        }\r\n\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function update(module, endpoint, auth, data) {\r\n        let obj = makeRequest('PUT', module, endpoint, auth);\r\n        obj.data = JSON.stringify(data);\r\n        return $.ajax(obj);\r\n    }\r\n\r\n    function remove(module, endpoint, auth) {\r\n        return $.ajax(makeRequest('DELETE', module, endpoint, auth));\r\n    }\r\n\r\n    function handleError(reason) {\r\n        return reason.responseJSON.description;\r\n    }\r\n\r\n    return {\r\n        get,\r\n        post,\r\n        update,\r\n        remove,\r\n        handleError\r\n    };\r\n})();\r\n\r\nexport default remoteKinvey;","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nclass UserService {\r\n    static register(username, password) {\r\n        return remoteKinvey.post('user', '', 'basic', { username, password });\r\n    }\r\n\r\n    static login(username, password) {\r\n        return remoteKinvey.post('user', 'login', 'basic', { username, password });\r\n    }\r\n\r\n    static logout() {\r\n        return remoteKinvey.post('user', '_logout', 'kinvey');\r\n    }\r\n}\r\n\r\nexport default UserService;","const actionTypes = {\r\n    LOGGIN_SUCCESS: 'LOGGIN_SUCCESS',\r\n    LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n    AUTH_ERROR: 'AUTH_ERROR',\r\n    AUTH_REQUEST: 'AUTH_REQUEST',\r\n    REMOTE_ERROR: 'REMOTE_ERROR',\r\n    LIST_CREATED: 'LIST_CREATED',\r\n    LIST_UPDATED: 'LIST_UPDATED',\r\n    LIST_DELETED: 'LIST_DELETED',\r\n    FETCH_LISTS_SUCCESS: 'FETCH_LISTS_SUCCESS',\r\n    FIND_ONE_BY_ID: 'FIND_ONE_BY_ID',\r\n}\r\n\r\nexport default actionTypes;","import UserService from '../services/UserService';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\nimport Auth from '../components/users/Auth';\r\nimport actionTypes from '../constants/actionTypes';\r\n\r\nfunction loginSuccess() {\r\n    return {\r\n        type: actionTypes.LOGGIN_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction logoutSuccess() {\r\n    return {\r\n        type: actionTypes.LOGOUT_SUCCESS,\r\n    };\r\n}\r\n\r\nfunction authError(msg) {\r\n    return {\r\n        type: actionTypes.AUTH_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction requestAuthentication() {\r\n    return {\r\n        type: actionTypes.AUTH_REQUEST\r\n    }\r\n}\r\n\r\nfunction login(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.login(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction register(username, password) {\r\n    return (dispatch) => {\r\n        return UserService.register(username, password)\r\n            .then(data => {\r\n                Auth.authenticateUser(data._kmd.authtoken);\r\n                dispatch(loginSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction logout() {\r\n    return (dispatch) => {\r\n        return UserService.logout()\r\n            .then(data => {\r\n                Auth.deauthenticateUser();\r\n                dispatch(logoutSuccess());\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(authError(msg))\r\n            });\r\n    };\r\n}\r\nexport { login, register, logout, requestAuthentication }","import React, {Component} from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/authActions';\r\nimport toastr from 'toastr';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.login(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User login successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        console.log('Login Page render');\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-4 offset-md-4'>\r\n            <h1>Login</h1>\r\n                <p>Please enter your username and password.</p>\r\n                <LoginForm\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    error={this.state.error}\r\n                    onChange={this.onInputChangeHandler}\r\n                    onSubmit={this.onSubmitHandler} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        login: (username, password) => dispatch(login(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport toastr from 'toastr';\r\nimport {logout} from '../../actions/authActions';\r\n\r\nclass LogoutPage extends Component {\r\n    componentWillMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (!newProps.loggedIn) {\r\n            this.props.history.push('/users/login');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n      };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutPage);","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst RegisterForm = (props) => (\r\n    <form>\r\n        <div>{props.error}</div>\r\n        <Input\r\n            name='username'\r\n            placeholder='Username'\r\n            value={props.username}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={props.password}\r\n            onChange={props.onChange} />\r\n        <Input\r\n            type='password'\r\n            name='repeat'\r\n            placeholder='Confirm  Password'\r\n            value={props.confirmPassword}\r\n            onChange={props.onChange} />\r\n        <br />\r\n        <Submit\r\n            value='Register'\r\n            onClick={props.onSubmit} />\r\n    </form>\r\n);\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport RegisterForm from './RegisterForm';\r\nimport toastr from 'toastr';\r\nimport {register} from '../../actions/authActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            repeat: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onInputChangeHandler(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        this.props.register(this.state.username.toLowerCase(), this.state.password);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n        }\r\n\r\n        if (newProps.loggedIn) {\r\n            toastr.success('User registration successfull!');\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    isValidForm() {\r\n        const username = this.state.username;\r\n        const password = this.state.password;\r\n        const repeat = this.state.repeat;\r\n\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (username === '' || password === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (password !== repeat) {\r\n            error = 'Passwords missmatch!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-4 offset-md-4'>\r\n                    <h1>Register</h1>\r\n                    <p>Please fill in this form to create an account.</p>\r\n                    <RegisterForm\r\n                        username={this.state.username}\r\n                        password={this.state.password}\r\n                        repeat={this.state.repeat}\r\n                        error={this.state.error}\r\n                        onChange={this.onInputChangeHandler}\r\n                        onSubmit={this.onSubmitHandler} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedIn: state.auth.loggedIn,\r\n        error: state.auth.error\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        register: (username, password) => dispatch(register(username, password))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","import remoteKinvey from '../api/remoteKinvey';\r\n\r\nconst COLLECTION_NAME = 'lists';\r\n\r\nclass ListService {\r\n    static create(data) {\r\n        return remoteKinvey.post('appdata', COLLECTION_NAME, 'kinvey', data);\r\n    }\r\n\r\n    static edit(id, data) {\r\n        return remoteKinvey.update('appdata', COLLECTION_NAME + `/${id}`, 'kinvey', data);\r\n    }\r\n\r\n    static delete(id) {\r\n        return remoteKinvey.remove('appdata', COLLECTION_NAME + `/${id}`, 'kinvey');\r\n    }\r\n\r\n    static getAll() {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n\r\n    static getById(id) {\r\n        return remoteKinvey.get('appdata', COLLECTION_NAME, 'kinvey');\r\n    }\r\n}\r\n\r\nexport default ListService;","import ListService from '../services/ListService';\r\nimport actionTypes from '../constants/actionTypes';\r\nimport remoteKinvey from '../api/remoteKinvey';\r\n\r\nfunction createSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_CREATED,\r\n        data\r\n    };\r\n}\r\n\r\nfunction editSuccess(data) {\r\n    return {\r\n        type: actionTypes.LIST_UPDATED,\r\n        data\r\n    }\r\n}\r\n\r\nfunction deleteSuccess(id) {\r\n    return {\r\n        type: actionTypes.LIST_DELETED,\r\n        id\r\n    }\r\n}\r\n\r\nfunction fetchSuccess(data) {\r\n    return {\r\n        type: actionTypes.FETCH_LISTS_SUCCESS,\r\n        data\r\n    }\r\n}\r\n\r\nfunction remoteError(msg) {\r\n    return {\r\n        type: actionTypes.REMOTE_ERROR,\r\n        message: msg\r\n    }\r\n}\r\n\r\nfunction createList(data) {\r\n    return (dispatch) => {\r\n        return ListService.create(data)\r\n            .then(data => {\r\n                dispatch(createSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction editList(id, data) {\r\n    return (dispatch) => {\r\n        return ListService.edit(id, data)\r\n            .then(data => {\r\n                dispatch(editSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction deleteList(id) {\r\n    return (dispatch) => {\r\n        return ListService.delete(id)\r\n            .then(() => {\r\n                dispatch(deleteSuccess(id));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nfunction fetchAll() {\r\n    return (dispatch) => {\r\n        return ListService.getAll()\r\n            .then(data => {\r\n                dispatch(fetchSuccess(data));\r\n            }).catch(err => {\r\n                const msg = remoteKinvey.handleError(err);\r\n                dispatch(remoteError(msg))\r\n            });\r\n    };\r\n}\r\n\r\nexport { createList, fetchAll, editList, deleteList };","import React from 'react';\r\nimport './ListThumb.css';\r\n//import { Link } from 'react-router-dom';\r\n\r\nconst ListThumb = (props) => (\r\n    <div className='list-thumb'>\r\n        <h2>{props.list.name}</h2>\r\n        <p>\r\n            <span>Total:</span> 6<br />\r\n            <span>Today:</span> 3<br />\r\n            <span>Active:</span> 2<br />\r\n            <span>Completed:</span> 1<br />\r\n        </p>\r\n        <button onClick={(event) => (props.editHandler(event, props.list))}>[Edit]</button> \r\n        <button onClick={props.deleteHandler}>[Delete]</button>\r\n        {/* [<Link to={'/list/edit/' + props.list._id}>Edit</Link>] \r\n        [<Link to={'/list/delete/' + props.list._id}>Delete</Link>] */}\r\n    </div>\r\n);\r\n\r\nexport default ListThumb;","import React from 'react';\r\nimport ListThumb from './ListThumb';\r\n\r\nconst ShowAllLists = (props) => {\r\n    const data = props.data;\r\n    let listItems = Object.keys(data).map(key => (\r\n        <ListThumb key={key} list={data[key]} editHandler={props.editHandler} />\r\n    ));\r\n\r\n    console.log('Render ShowAllLists');\r\n    return (\r\n        <div>\r\n            {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowAllLists;","import React from 'react';\r\nimport Input from '../common/forms/Input';\r\nimport Submit from '../common/forms/Submit';\r\n\r\nconst ListForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>{props.error}</div>\r\n            <Input\r\n                name='name'\r\n                placeholder='Name'\r\n                value={props.name}\r\n                onChange={props.onChange} />\r\n            <br />\r\n            <Submit\r\n                value='Submit'\r\n                onClick={props.onSubmit} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ListForm;","import React, { Component} from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass CreateListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        //const data = { name: this.props.name };\r\n        this.props.createList(this.props.list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Create List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={this.onSubmitHandler}\r\n                    error={this.state.error} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateListPage","import React, { Component } from 'react';\r\nimport ListForm from './ListForm';\r\n\r\nclass EditListPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            error: ''\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    onSubmitHandler(e, id, list) {\r\n        e.preventDefault();\r\n\r\n        if(!this.isValidForm()) {\r\n            return;\r\n        }\r\n\r\n        console.log(list);\r\n        this.props.editList(id, list);\r\n    }\r\n\r\n    isValidForm() {\r\n        const name = this.props.list.name;\r\n        let formIsValid = true;\r\n        let error = '';\r\n\r\n        if (name === '') {\r\n            error = 'All input fields are required!';\r\n            formIsValid = false;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        return formIsValid;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  className='row'>\r\n            <div className='col-md-6 offset-md-3'>\r\n            <h1>Edit List</h1>\r\n                <ListForm\r\n                    name={this.props.list.name}\r\n                    onChange={this.props.onChange}\r\n                    onSubmit={(e) => (this.onSubmitHandler(e, this.props.id, this.props.list))}\r\n                    error={this.state.error} /> \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditListPage;","import React, { Component } from 'react';\r\nimport { fetchAll } from '../../actions/listActions';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../constants/actionTypes';\r\nimport ShowAllLists from './ShowAllLists';\r\nimport CreateListPage from './CreateListPage';\r\nimport { createList, editList, deleteList } from '../../actions/listActions';\r\nimport toastr from 'toastr';\r\nimport EditListPage from './EditListPage';\r\n\r\nconst MODE_CREATE = 'MODE_CREATE';\r\nconst MODE_READ = 'MODE_READ';\r\nconst MODE_UPDATE = 'MODE_UPDATE';\r\nconst MODE_DELETE = 'MODE_DELETE';\r\n\r\nclass ManageListsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mode: MODE_READ,\r\n            list: {\r\n                name: ''\r\n            },\r\n            error: ''\r\n        }\r\n\r\n        this.onShowCreateHandler = this.onShowCreateHandler.bind(this);\r\n        this.onChangeInputHandler = this.onChangeInputHandler.bind(this);\r\n        this.onShowUpdateHandler = this.onShowUpdateHandler.bind(this);\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.remote === actionTypes.FETCH_LISTS_SUCCESS) {\r\n            return;\r\n        }\r\n\r\n        this.props.fetchAll();\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.error) {\r\n            toastr.error(newProps.error);\r\n            return;\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_CREATED) {\r\n            toastr.success('New list added successfully!');\r\n            this.setState({ mode: MODE_READ });\r\n        }\r\n\r\n        if (newProps.remote === actionTypes.LIST_UPDATED) {\r\n            toastr.success('The list was successfully updated!');\r\n            this.setState({ mode: MODE_READ });\r\n        }\r\n    }\r\n\r\n    onChangeInputHandler(e) {\r\n        this.setState({ list: { [e.target.name]: e.target.value } });\r\n        //this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onShowCreateHandler(event) {\r\n        this.setState({ mode: MODE_CREATE });\r\n    }\r\n\r\n    onShowUpdateHandler(e, list) {\r\n        this.setState({ mode: MODE_UPDATE, list: {name: list.name}, id: list._id });\r\n    }\r\n\r\n    onDeleteHandler(id) {\r\n        this.setState({ mode: MODE_DELETE }); //Do I really need this? To be decided later!!!\r\n        console.log('To be deleted'); //todo pass the id\r\n    }\r\n\r\n    render() {\r\n        //console.log('ManageListsPage Render');\r\n        return (\r\n            <div>\r\n                <h1>Manage Lists</h1>\r\n\r\n                {this.state.mode === MODE_READ &&\r\n                    <div>\r\n                        <button\r\n                            onClick={this.onShowCreateHandler}>\r\n                            Add List\r\n                        </button>\r\n                        <hr />\r\n                        <ShowAllLists \r\n                            data={this.props.data} \r\n                            editHandler={this.onShowUpdateHandler}\r\n                            deleteHandler={this.onDeleteHandler} />\r\n                    </div>\r\n                }\r\n\r\n                {this.state.mode !== MODE_READ &&\r\n                    <button\r\n                        onClick={() => (this.setState({mode: MODE_READ}))}>\r\n                        Back to All Lists\r\n                    </button>\r\n                }\r\n\r\n                {this.state.mode === MODE_CREATE &&\r\n                    <CreateListPage\r\n                        createList={this.props.createList}\r\n                        list={this.state.list}\r\n                        onChange={this.onChangeInputHandler} />\r\n                }\r\n                {this.state.mode === MODE_UPDATE &&\r\n                    <EditListPage\r\n                        editList={this.props.editList}\r\n                        list={this.state.list}\r\n                        id={this.state.id}\r\n                        onChange={this.onChangeInputHandler}\r\n                    />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        data: state.list.data,\r\n        remote: state.list.remote,\r\n        error: state.list.error,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchAll: () => dispatch(fetchAll()),\r\n        createList: (data) => dispatch(createList(data)),\r\n        editList: (id, data) => dispatch(editList(id, data)),\r\n        deleteList: (id) => dispatch(deleteList(id))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageListsPage);","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nimport HomePage from '../../HomePage';\r\nimport AboutPage from '../../AboutPage';\r\nimport LoginPage from '../../users/LoginPage';\r\nimport LogoutPage from '../../users/LogoutPage';\r\nimport RegisterPage from '../../users/RegisterPage';\r\n// import AddTodoPage from '../../todos/AddTodoPage';\r\nimport ManageListsPage from '../../lists/ManageListsPage';\r\nimport CreateListPage from '../../lists/CreateListPage';\r\nimport EditListPage from '../../lists/EditListPage';\r\n\r\nconst Routes = (props) => (\r\n    <Switch>\r\n        <PrivateRoute path='/' exact component={HomePage} />\r\n        <Route path='/about' component={AboutPage} />\r\n        <Route path='/users/login' component={LoginPage} />\r\n        <Route path='/users/register' component={RegisterPage} />\r\n        <PrivateRoute path='/users/logout' component={LogoutPage} />\r\n        {/* <PrivateRoute path='/todos/add' component={AddTodoPage} /> */}\r\n        <PrivateRoute path='/lists' component={ManageListsPage} />\r\n        <PrivateRoute path='/list/add' component={CreateListPage} />\r\n        <PrivateRoute path='/list/edit/:id' component={EditListPage} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = (props) => (\r\n    <li className=\"nav-item\">\r\n        <NavLink exact className='nav-link' activeClassName='active' to={props.to}>{props.label}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default MenuItem;","import React from 'react';\r\nimport MenuItem from './MenuItem';\r\n\r\nconst Menu = (props) => {\r\n    let menuItems = props.menuItems.map((item, index) => {\r\n        return <MenuItem key={index} label={item.label} to={item.to} />\r\n    });\r\n\r\n    return <ul className=\"navbar-nav\">\r\n        {menuItems}\r\n    </ul>\r\n}\r\n\r\nexport default Menu;","const NavLinks = {\r\n    MAIN_PUBLIC: [\r\n        { label: 'Login', to: '/users/login' },\r\n        { label: 'Register', to: '/users/register' },\r\n    ],\r\n    MAIN_PRIVATE: [\r\n        { label: 'Home', to: '/' },\r\n        { label: 'Add Todo', to: '/todos/add' },\r\n        { label: 'Manage Lists', to: '/lists' },\r\n        { label: 'Logout', to: '/users/logout' },\r\n    ]\r\n}\r\n\r\nexport default NavLinks;","import React, { Component } from 'react';\r\nimport Menu from './Menu';\r\nimport NavLinks from '../../../constants/NavLinks';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        let menuItems = this.props.loggedIn ? NavLinks.MAIN_PRIVATE : NavLinks.MAIN_PUBLIC;\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <Menu menuItems={menuItems} />\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './navbar/Navbar';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <Navbar loggedIn={props.loggedIn} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright 2018 - Organizer App by Willbe.S</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Routes from './components/common/routes/Routes';\r\nimport Header from './components/common/Header';\r\nimport Footer from './components/common/Footer';\r\nimport { requestAuthentication } from './actions/authActions';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.isAuthenticated();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header \r\n          loggedIn={this.props.loggedIn} />\r\n        <div className=\"container margin-top-30\">\r\n          <Routes />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedIn: state.auth.loggedIn,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    isAuthenticated: () => dispatch(requestAuthentication()),\r\n  };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { authReducer } from './authReducer';\r\nimport { listReducer } from './listReducer';\r\n\r\nexport default {\r\n    auth: authReducer,\r\n    list: listReducer\r\n};","import actionTypes from '../constants/actionTypes';\r\nimport Auth from '../components/users/Auth';\r\n\r\nexport function authReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_REQUEST:\r\n            return Object.assign({}, state, { loggedIn: Auth.isUserAuthenticated(), error: false });\r\n        case actionTypes.LOGGIN_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: true, error: false });\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return Object.assign({}, state, { loggedIn: false, error: false });\r\n        case actionTypes.AUTH_ERROR:\r\n            return Object.assign({}, state, { loggedIn: false, error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}","import actionTypes from '../constants/actionTypes';\r\n\r\nexport function listReducer(state = { data: {}, remote: null, error: null }, action) {\r\n    let newState = null;\r\n    switch (action.type) {\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return { data: {}, remote: null, error: null };\r\n        case actionTypes.LIST_CREATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_CREATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n        case actionTypes.LIST_UPDATED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_UPDATED, error: null });\r\n            newState.data[action.data._id] = action.data;\r\n            return newState;\r\n        case actionTypes.LIST_DELETED:\r\n            newState = Object.assign({}, state, { remote: actionTypes.LIST_DELETED, error: null });\r\n            deleteData(newState.data, action.id);\r\n            return newState;\r\n        case actionTypes.FETCH_LISTS_SUCCESS:\r\n            return Object.assign({}, state, { data: storeData(action.data), remote: actionTypes.FETCH_LISTS_SUCCESS, error: null });\r\n        case actionTypes.REMOTE_ERROR:\r\n            //TODO - decide the best place to handle remote errors\r\n            return Object.assign({}, state, { error: action.message });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction storeData(data) {\r\n    let store = {};\r\n    data.forEach(element => {\r\n        store[element._id] = element;\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\n//Can be used on both objects and arrays\r\nfunction deleteData(data, key) {\r\n    if (!data.hasOwnProperty(key)) {\r\n        return;\r\n    }\r\n\r\n    if (isNaN(parseInt(key)) || !(data instanceof Array)) {\r\n        delete data[key];\r\n    } else {\r\n        data.splice(key, 1);\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport reducers from './reducers/reducers';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(combineReducers(reducers), applyMiddleware(thunk));\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}